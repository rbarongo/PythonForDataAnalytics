{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "5513a62b",
   "metadata": {},
   "source": [
    "#### PYTHON FOR DATA ANALYTICS\n",
    "#### DAY 4 on  23 DEC 2021"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0f823b95",
   "metadata": {},
   "outputs": [],
   "source": [
    "\"\"\"\"\n",
    "Agenda\n",
    "(1)Recap introduction to Pandas\n",
    "(2)Recap Data analysis with Pandas\n",
    "(3)Introduction to Numpy\n",
    "\n",
    "\"\"\""
   ]
  },
  {
   "cell_type": "markdown",
   "id": "818fd96f",
   "metadata": {},
   "source": [
    "### (1) Recap introduction to Pandas\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cde21953",
   "metadata": {},
   "outputs": [],
   "source": [
    "\"\"\"\n",
    "Pandas is a python library for processing tabular and heterogeneous data\n",
    "Individual columns in pandas are called series\n",
    "Numpy is a python library for processing tabulan and homogeneous numeric data\n",
    "\n",
    "references\n",
    " https://pandas.pydata.org/docs/index.html \n",
    " https://www.datacamp.com/community/blog/python-pandas-cheat-sheet?utm_source=adwords_ppc&utm_medium=cpc&utm_campaignid=12492439802&utm_adgroupid=122563403481&utm_device=c&utm_keyword=panda%20package%20python&utm_matchtype=b&utm_network=g&utm_adpostion=&utm_creative=504158804617&utm_targetid=aud-299261629574:kwd-614516587896&utm_loc_interest_ms=&utm_loc_physical_ms=1012832&gclid=Cj0KCQiAweaNBhDEARIsAJ5hwbfZf7p2czMb_6r8eKJ5Vxcv0YKC6NJlUPrRfFoOS7ig81fAlMZntbAaAl_OEALw_wcB\n",
    "\"\"\""
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8dd8098e",
   "metadata": {},
   "source": [
    "### (1.1) Pandas - data collection (csv, excel, database)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "f4fcbeb4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>BANKSTMTID</th>\n",
       "      <th>STATEMENTDATETIME</th>\n",
       "      <th>CREDTTM</th>\n",
       "      <th>ACCOUTHOLDERNAME</th>\n",
       "      <th>ADDRESS</th>\n",
       "      <th>ACCOUTNO</th>\n",
       "      <th>STATEMENTACCOUNTFROM</th>\n",
       "      <th>STATEMENTACCOUNTTO</th>\n",
       "      <th>PAYMENTTYPE</th>\n",
       "      <th>CURRENCY</th>\n",
       "      <th>...</th>\n",
       "      <th>CLOSINGBALANCE</th>\n",
       "      <th>CLOSINGBALANCEDRCR</th>\n",
       "      <th>STATEMENTBALANCE</th>\n",
       "      <th>AVAILABLEBALANCE</th>\n",
       "      <th>NBOFTXS</th>\n",
       "      <th>MSGID</th>\n",
       "      <th>RECONSTATUS</th>\n",
       "      <th>CAT1</th>\n",
       "      <th>CAT2</th>\n",
       "      <th>TRANSACTIONCODE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>711064</td>\n",
       "      <td>09-NOV-21</td>\n",
       "      <td>10-NOV-21</td>\n",
       "      <td>NOSTRO</td>\n",
       "      <td>NaN</td>\n",
       "      <td>995529296HQ</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>P105</td>\n",
       "      <td>EUR</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DR</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0</td>\n",
       "      <td>BPG101120213836940</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>711066</td>\n",
       "      <td>09-NOV-21</td>\n",
       "      <td>10-NOV-21</td>\n",
       "      <td>PARIS CLUB-BKENGB2L</td>\n",
       "      <td>NaN</td>\n",
       "      <td>42945003</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>P105</td>\n",
       "      <td>GBP</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>CR</td>\n",
       "      <td>1.000000e-02</td>\n",
       "      <td>1.000000e-02</td>\n",
       "      <td>0</td>\n",
       "      <td>BPG101120213836923</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>711065</td>\n",
       "      <td>09-NOV-21</td>\n",
       "      <td>10-NOV-21</td>\n",
       "      <td>SPECIAL GOVERN. PROJ.-CITIUS33</td>\n",
       "      <td>NaN</td>\n",
       "      <td>36125358</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>P105</td>\n",
       "      <td>USD</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DR</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0</td>\n",
       "      <td>BPG101120213836919</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>711067</td>\n",
       "      <td>09-NOV-21</td>\n",
       "      <td>10-NOV-21</td>\n",
       "      <td>CENTRAL BANK OF KENYA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1000172568</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>P105</td>\n",
       "      <td>KES</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>CR</td>\n",
       "      <td>2.717207e+08</td>\n",
       "      <td>2.717207e+08</td>\n",
       "      <td>10</td>\n",
       "      <td>BPG101120213836911</td>\n",
       "      <td>RECONCILED</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>711070</td>\n",
       "      <td>09-NOV-21</td>\n",
       "      <td>10-NOV-21</td>\n",
       "      <td>EUR 2 DAYS NOTICE BISBCHBB</td>\n",
       "      <td>NaN</td>\n",
       "      <td>EUR2D</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>P105</td>\n",
       "      <td>EUR</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DR</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0</td>\n",
       "      <td>BPG101120213836933</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4344</th>\n",
       "      <td>710396</td>\n",
       "      <td>21-OCT-21</td>\n",
       "      <td>22-OCT-21</td>\n",
       "      <td>CURRENT A/C- RIKSSESS</td>\n",
       "      <td>NaN</td>\n",
       "      <td>TZ114101</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>P105</td>\n",
       "      <td>SEK</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DR</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0</td>\n",
       "      <td>BPG221020213720902</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4345</th>\n",
       "      <td>710397</td>\n",
       "      <td>21-OCT-21</td>\n",
       "      <td>22-OCT-21</td>\n",
       "      <td>CURRENT A/C ABSAZAJJ</td>\n",
       "      <td>NaN</td>\n",
       "      <td>027631ZAR671201</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>P105</td>\n",
       "      <td>ZAR</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DR</td>\n",
       "      <td>3.830296e+06</td>\n",
       "      <td>3.830296e+06</td>\n",
       "      <td>0</td>\n",
       "      <td>BPG221020213720869</td>\n",
       "      <td>EXCEPTION</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4346</th>\n",
       "      <td>710399</td>\n",
       "      <td>21-OCT-21</td>\n",
       "      <td>22-OCT-21</td>\n",
       "      <td>CALL A/C - CRASGB2L</td>\n",
       "      <td>NaN</td>\n",
       "      <td>332600051</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>P105</td>\n",
       "      <td>GBP</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DR</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0</td>\n",
       "      <td>BPG221020213720880</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4347</th>\n",
       "      <td>710402</td>\n",
       "      <td>21-OCT-21</td>\n",
       "      <td>22-OCT-21</td>\n",
       "      <td>FRNYUS33-ACCOUNT2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>021087060TANZA2</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>P105</td>\n",
       "      <td>USD</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DR</td>\n",
       "      <td>2.400000e+04</td>\n",
       "      <td>2.400000e+04</td>\n",
       "      <td>0</td>\n",
       "      <td>BPG221020213720863</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4348</th>\n",
       "      <td>710366</td>\n",
       "      <td>21-OCT-21</td>\n",
       "      <td>22-OCT-21</td>\n",
       "      <td>HONGKONG AND SHANGHAI BANKING CORPORATION LIMITED</td>\n",
       "      <td>NaN</td>\n",
       "      <td>848-390951-209</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>P105</td>\n",
       "      <td>CNY</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DR</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0</td>\n",
       "      <td>BPG221020213720894</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>4349 rows × 23 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      BANKSTMTID STATEMENTDATETIME    CREDTTM  \\\n",
       "0         711064         09-NOV-21  10-NOV-21   \n",
       "1         711066         09-NOV-21  10-NOV-21   \n",
       "2         711065         09-NOV-21  10-NOV-21   \n",
       "3         711067         09-NOV-21  10-NOV-21   \n",
       "4         711070         09-NOV-21  10-NOV-21   \n",
       "...          ...               ...        ...   \n",
       "4344      710396         21-OCT-21  22-OCT-21   \n",
       "4345      710397         21-OCT-21  22-OCT-21   \n",
       "4346      710399         21-OCT-21  22-OCT-21   \n",
       "4347      710402         21-OCT-21  22-OCT-21   \n",
       "4348      710366         21-OCT-21  22-OCT-21   \n",
       "\n",
       "                                       ACCOUTHOLDERNAME  ADDRESS  \\\n",
       "0                                                NOSTRO      NaN   \n",
       "1                                   PARIS CLUB-BKENGB2L      NaN   \n",
       "2                        SPECIAL GOVERN. PROJ.-CITIUS33      NaN   \n",
       "3                                 CENTRAL BANK OF KENYA      NaN   \n",
       "4                            EUR 2 DAYS NOTICE BISBCHBB      NaN   \n",
       "...                                                 ...      ...   \n",
       "4344                              CURRENT A/C- RIKSSESS      NaN   \n",
       "4345                               CURRENT A/C ABSAZAJJ      NaN   \n",
       "4346                                CALL A/C - CRASGB2L      NaN   \n",
       "4347                                  FRNYUS33-ACCOUNT2      NaN   \n",
       "4348  HONGKONG AND SHANGHAI BANKING CORPORATION LIMITED      NaN   \n",
       "\n",
       "             ACCOUTNO STATEMENTACCOUNTFROM STATEMENTACCOUNTTO PAYMENTTYPE  \\\n",
       "0         995529296HQ             TANZTZTX           TANZTZTX        P105   \n",
       "1            42945003             TANZTZTX           TANZTZTX        P105   \n",
       "2            36125358             TANZTZTX           TANZTZTX        P105   \n",
       "3          1000172568             TANZTZTX           TANZTZTX        P105   \n",
       "4               EUR2D             TANZTZTX           TANZTZTX        P105   \n",
       "...               ...                  ...                ...         ...   \n",
       "4344         TZ114101             TANZTZTX           TANZTZTX        P105   \n",
       "4345  027631ZAR671201             TANZTZTX           TANZTZTX        P105   \n",
       "4346        332600051             TANZTZTX           TANZTZTX        P105   \n",
       "4347  021087060TANZA2             TANZTZTX           TANZTZTX        P105   \n",
       "4348   848-390951-209             TANZTZTX           TANZTZTX        P105   \n",
       "\n",
       "     CURRENCY  ... CLOSINGBALANCE  CLOSINGBALANCEDRCR STATEMENTBALANCE  \\\n",
       "0         EUR  ...            NaN                  DR     0.000000e+00   \n",
       "1         GBP  ...            NaN                  CR     1.000000e-02   \n",
       "2         USD  ...            NaN                  DR     0.000000e+00   \n",
       "3         KES  ...            NaN                  CR     2.717207e+08   \n",
       "4         EUR  ...            NaN                  DR     0.000000e+00   \n",
       "...       ...  ...            ...                 ...              ...   \n",
       "4344      SEK  ...            NaN                  DR     0.000000e+00   \n",
       "4345      ZAR  ...            NaN                  DR     3.830296e+06   \n",
       "4346      GBP  ...            NaN                  DR     0.000000e+00   \n",
       "4347      USD  ...            NaN                  DR     2.400000e+04   \n",
       "4348      CNY  ...            NaN                  DR     0.000000e+00   \n",
       "\n",
       "      AVAILABLEBALANCE NBOFTXS               MSGID  RECONSTATUS  CAT1 CAT2  \\\n",
       "0         0.000000e+00       0  BPG101120213836940          NaN   NaN  NaN   \n",
       "1         1.000000e-02       0  BPG101120213836923          NaN   NaN  NaN   \n",
       "2         0.000000e+00       0  BPG101120213836919          NaN   NaN  NaN   \n",
       "3         2.717207e+08      10  BPG101120213836911   RECONCILED   NaN  NaN   \n",
       "4         0.000000e+00       0  BPG101120213836933          NaN   NaN  NaN   \n",
       "...                ...     ...                 ...          ...   ...  ...   \n",
       "4344      0.000000e+00       0  BPG221020213720902          NaN   NaN  NaN   \n",
       "4345      3.830296e+06       0  BPG221020213720869    EXCEPTION   NaN  NaN   \n",
       "4346      0.000000e+00       0  BPG221020213720880          NaN   NaN  NaN   \n",
       "4347      2.400000e+04       0  BPG221020213720863          NaN   NaN  NaN   \n",
       "4348      0.000000e+00       0  BPG221020213720894          NaN   NaN  NaN   \n",
       "\n",
       "     TRANSACTIONCODE  \n",
       "0                NaN  \n",
       "1                NaN  \n",
       "2                NaN  \n",
       "3                NaN  \n",
       "4                NaN  \n",
       "...              ...  \n",
       "4344             NaN  \n",
       "4345             NaN  \n",
       "4346             NaN  \n",
       "4347             NaN  \n",
       "4348             NaN  \n",
       "\n",
       "[4349 rows x 23 columns]"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Create pandas from CSV\n",
    "import pandas as pd\n",
    "csv_path = \"C:\\\\CBSBNKSTMTS.csv\"\n",
    "df = pd.read_csv(csv_path)\n",
    "#df stands for dataframe\n",
    "\n",
    "#display dataframe\n",
    "df\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "066ab457",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "pandas.core.frame.DataFrame"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#get type to verify is you are using a pandas dataframe\n",
    "type(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "0bb5dbc6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(4349, 23)"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#get columns and rows in dataframe\n",
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "af156322",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>BANKSTMTID</th>\n",
       "      <th>ADDRESS</th>\n",
       "      <th>OPENINGBALANCE</th>\n",
       "      <th>CLOSINGBALANCE</th>\n",
       "      <th>STATEMENTBALANCE</th>\n",
       "      <th>AVAILABLEBALANCE</th>\n",
       "      <th>NBOFTXS</th>\n",
       "      <th>CAT1</th>\n",
       "      <th>CAT2</th>\n",
       "      <th>TRANSACTIONCODE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>4349.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4.349000e+03</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4.349000e+03</td>\n",
       "      <td>4.349000e+03</td>\n",
       "      <td>4349.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>710363.619223</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6.653469e+07</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6.782743e+07</td>\n",
       "      <td>6.782743e+07</td>\n",
       "      <td>1.021384</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>1341.624245</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.175061e+08</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.193122e+08</td>\n",
       "      <td>2.193122e+08</td>\n",
       "      <td>4.080126</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>708050.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>709166.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>710431.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>9.946261e+04</td>\n",
       "      <td>NaN</td>\n",
       "      <td>9.946261e+04</td>\n",
       "      <td>9.946261e+04</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>711518.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6.805696e+06</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6.821690e+06</td>\n",
       "      <td>6.821690e+06</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>712629.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.777282e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.777282e+09</td>\n",
       "      <td>1.777282e+09</td>\n",
       "      <td>54.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          BANKSTMTID  ADDRESS  OPENINGBALANCE  CLOSINGBALANCE  \\\n",
       "count    4349.000000      0.0    4.349000e+03             0.0   \n",
       "mean   710363.619223      NaN    6.653469e+07             NaN   \n",
       "std      1341.624245      NaN    2.175061e+08             NaN   \n",
       "min    708050.000000      NaN    0.000000e+00             NaN   \n",
       "25%    709166.000000      NaN    0.000000e+00             NaN   \n",
       "50%    710431.000000      NaN    9.946261e+04             NaN   \n",
       "75%    711518.000000      NaN    6.805696e+06             NaN   \n",
       "max    712629.000000      NaN    1.777282e+09             NaN   \n",
       "\n",
       "       STATEMENTBALANCE  AVAILABLEBALANCE      NBOFTXS  CAT1  CAT2  \\\n",
       "count      4.349000e+03      4.349000e+03  4349.000000   0.0   0.0   \n",
       "mean       6.782743e+07      6.782743e+07     1.021384   NaN   NaN   \n",
       "std        2.193122e+08      2.193122e+08     4.080126   NaN   NaN   \n",
       "min        0.000000e+00      0.000000e+00     0.000000   NaN   NaN   \n",
       "25%        0.000000e+00      0.000000e+00     0.000000   NaN   NaN   \n",
       "50%        9.946261e+04      9.946261e+04     0.000000   NaN   NaN   \n",
       "75%        6.821690e+06      6.821690e+06     0.000000   NaN   NaN   \n",
       "max        1.777282e+09      1.777282e+09    54.000000   NaN   NaN   \n",
       "\n",
       "       TRANSACTIONCODE  \n",
       "count              0.0  \n",
       "mean               NaN  \n",
       "std                NaN  \n",
       "min                NaN  \n",
       "25%                NaN  \n",
       "50%                NaN  \n",
       "75%                NaN  \n",
       "max                NaN  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#get statistical summary of columns, to see how data is spread\n",
    "df.describe()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "c9a56427",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>BANKSTMTID</th>\n",
       "      <th>STATEMENTDATETIME</th>\n",
       "      <th>CREDTTM</th>\n",
       "      <th>ACCOUTHOLDERNAME</th>\n",
       "      <th>ADDRESS</th>\n",
       "      <th>ACCOUTNO</th>\n",
       "      <th>STATEMENTACCOUNTFROM</th>\n",
       "      <th>STATEMENTACCOUNTTO</th>\n",
       "      <th>PAYMENTTYPE</th>\n",
       "      <th>CURRENCY</th>\n",
       "      <th>...</th>\n",
       "      <th>CLOSINGBALANCE</th>\n",
       "      <th>CLOSINGBALANCEDRCR</th>\n",
       "      <th>STATEMENTBALANCE</th>\n",
       "      <th>AVAILABLEBALANCE</th>\n",
       "      <th>NBOFTXS</th>\n",
       "      <th>MSGID</th>\n",
       "      <th>RECONSTATUS</th>\n",
       "      <th>CAT1</th>\n",
       "      <th>CAT2</th>\n",
       "      <th>TRANSACTIONCODE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>711064</td>\n",
       "      <td>09-NOV-21</td>\n",
       "      <td>10-NOV-21</td>\n",
       "      <td>NOSTRO</td>\n",
       "      <td>NaN</td>\n",
       "      <td>995529296HQ</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>P105</td>\n",
       "      <td>EUR</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DR</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0</td>\n",
       "      <td>BPG101120213836940</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>711066</td>\n",
       "      <td>09-NOV-21</td>\n",
       "      <td>10-NOV-21</td>\n",
       "      <td>PARIS CLUB-BKENGB2L</td>\n",
       "      <td>NaN</td>\n",
       "      <td>42945003</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>P105</td>\n",
       "      <td>GBP</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>CR</td>\n",
       "      <td>1.000000e-02</td>\n",
       "      <td>1.000000e-02</td>\n",
       "      <td>0</td>\n",
       "      <td>BPG101120213836923</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>711065</td>\n",
       "      <td>09-NOV-21</td>\n",
       "      <td>10-NOV-21</td>\n",
       "      <td>SPECIAL GOVERN. PROJ.-CITIUS33</td>\n",
       "      <td>NaN</td>\n",
       "      <td>36125358</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>P105</td>\n",
       "      <td>USD</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DR</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0</td>\n",
       "      <td>BPG101120213836919</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>711067</td>\n",
       "      <td>09-NOV-21</td>\n",
       "      <td>10-NOV-21</td>\n",
       "      <td>CENTRAL BANK OF KENYA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1000172568</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>P105</td>\n",
       "      <td>KES</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>CR</td>\n",
       "      <td>2.717207e+08</td>\n",
       "      <td>2.717207e+08</td>\n",
       "      <td>10</td>\n",
       "      <td>BPG101120213836911</td>\n",
       "      <td>RECONCILED</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>711070</td>\n",
       "      <td>09-NOV-21</td>\n",
       "      <td>10-NOV-21</td>\n",
       "      <td>EUR 2 DAYS NOTICE BISBCHBB</td>\n",
       "      <td>NaN</td>\n",
       "      <td>EUR2D</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>P105</td>\n",
       "      <td>EUR</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DR</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0</td>\n",
       "      <td>BPG101120213836933</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 23 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   BANKSTMTID STATEMENTDATETIME    CREDTTM                ACCOUTHOLDERNAME  \\\n",
       "0      711064         09-NOV-21  10-NOV-21                          NOSTRO   \n",
       "1      711066         09-NOV-21  10-NOV-21             PARIS CLUB-BKENGB2L   \n",
       "2      711065         09-NOV-21  10-NOV-21  SPECIAL GOVERN. PROJ.-CITIUS33   \n",
       "3      711067         09-NOV-21  10-NOV-21           CENTRAL BANK OF KENYA   \n",
       "4      711070         09-NOV-21  10-NOV-21      EUR 2 DAYS NOTICE BISBCHBB   \n",
       "\n",
       "   ADDRESS     ACCOUTNO STATEMENTACCOUNTFROM STATEMENTACCOUNTTO PAYMENTTYPE  \\\n",
       "0      NaN  995529296HQ             TANZTZTX           TANZTZTX        P105   \n",
       "1      NaN     42945003             TANZTZTX           TANZTZTX        P105   \n",
       "2      NaN     36125358             TANZTZTX           TANZTZTX        P105   \n",
       "3      NaN   1000172568             TANZTZTX           TANZTZTX        P105   \n",
       "4      NaN        EUR2D             TANZTZTX           TANZTZTX        P105   \n",
       "\n",
       "  CURRENCY  ... CLOSINGBALANCE  CLOSINGBALANCEDRCR STATEMENTBALANCE  \\\n",
       "0      EUR  ...            NaN                  DR     0.000000e+00   \n",
       "1      GBP  ...            NaN                  CR     1.000000e-02   \n",
       "2      USD  ...            NaN                  DR     0.000000e+00   \n",
       "3      KES  ...            NaN                  CR     2.717207e+08   \n",
       "4      EUR  ...            NaN                  DR     0.000000e+00   \n",
       "\n",
       "   AVAILABLEBALANCE NBOFTXS               MSGID  RECONSTATUS  CAT1 CAT2  \\\n",
       "0      0.000000e+00       0  BPG101120213836940          NaN   NaN  NaN   \n",
       "1      1.000000e-02       0  BPG101120213836923          NaN   NaN  NaN   \n",
       "2      0.000000e+00       0  BPG101120213836919          NaN   NaN  NaN   \n",
       "3      2.717207e+08      10  BPG101120213836911   RECONCILED   NaN  NaN   \n",
       "4      0.000000e+00       0  BPG101120213836933          NaN   NaN  NaN   \n",
       "\n",
       "  TRANSACTIONCODE  \n",
       "0             NaN  \n",
       "1             NaN  \n",
       "2             NaN  \n",
       "3             NaN  \n",
       "4             NaN  \n",
       "\n",
       "[5 rows x 23 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#get first 5 rows in dataframe, if you dont specify number, default number of rows is 5\n",
    "df.head(5) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "41c12c5c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>BANKSTMTID</th>\n",
       "      <th>STATEMENTDATETIME</th>\n",
       "      <th>CREDTTM</th>\n",
       "      <th>ACCOUTHOLDERNAME</th>\n",
       "      <th>ADDRESS</th>\n",
       "      <th>ACCOUTNO</th>\n",
       "      <th>STATEMENTACCOUNTFROM</th>\n",
       "      <th>STATEMENTACCOUNTTO</th>\n",
       "      <th>PAYMENTTYPE</th>\n",
       "      <th>CURRENCY</th>\n",
       "      <th>...</th>\n",
       "      <th>CLOSINGBALANCE</th>\n",
       "      <th>CLOSINGBALANCEDRCR</th>\n",
       "      <th>STATEMENTBALANCE</th>\n",
       "      <th>AVAILABLEBALANCE</th>\n",
       "      <th>NBOFTXS</th>\n",
       "      <th>MSGID</th>\n",
       "      <th>RECONSTATUS</th>\n",
       "      <th>CAT1</th>\n",
       "      <th>CAT2</th>\n",
       "      <th>TRANSACTIONCODE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>4344</th>\n",
       "      <td>710396</td>\n",
       "      <td>21-OCT-21</td>\n",
       "      <td>22-OCT-21</td>\n",
       "      <td>CURRENT A/C- RIKSSESS</td>\n",
       "      <td>NaN</td>\n",
       "      <td>TZ114101</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>P105</td>\n",
       "      <td>SEK</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DR</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>BPG221020213720902</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4345</th>\n",
       "      <td>710397</td>\n",
       "      <td>21-OCT-21</td>\n",
       "      <td>22-OCT-21</td>\n",
       "      <td>CURRENT A/C ABSAZAJJ</td>\n",
       "      <td>NaN</td>\n",
       "      <td>027631ZAR671201</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>P105</td>\n",
       "      <td>ZAR</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DR</td>\n",
       "      <td>3830295.89</td>\n",
       "      <td>3830295.89</td>\n",
       "      <td>0</td>\n",
       "      <td>BPG221020213720869</td>\n",
       "      <td>EXCEPTION</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4346</th>\n",
       "      <td>710399</td>\n",
       "      <td>21-OCT-21</td>\n",
       "      <td>22-OCT-21</td>\n",
       "      <td>CALL A/C - CRASGB2L</td>\n",
       "      <td>NaN</td>\n",
       "      <td>332600051</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>P105</td>\n",
       "      <td>GBP</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DR</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>BPG221020213720880</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4347</th>\n",
       "      <td>710402</td>\n",
       "      <td>21-OCT-21</td>\n",
       "      <td>22-OCT-21</td>\n",
       "      <td>FRNYUS33-ACCOUNT2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>021087060TANZA2</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>P105</td>\n",
       "      <td>USD</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DR</td>\n",
       "      <td>24000.00</td>\n",
       "      <td>24000.00</td>\n",
       "      <td>0</td>\n",
       "      <td>BPG221020213720863</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4348</th>\n",
       "      <td>710366</td>\n",
       "      <td>21-OCT-21</td>\n",
       "      <td>22-OCT-21</td>\n",
       "      <td>HONGKONG AND SHANGHAI BANKING CORPORATION LIMITED</td>\n",
       "      <td>NaN</td>\n",
       "      <td>848-390951-209</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>P105</td>\n",
       "      <td>CNY</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DR</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>BPG221020213720894</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 23 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      BANKSTMTID STATEMENTDATETIME    CREDTTM  \\\n",
       "4344      710396         21-OCT-21  22-OCT-21   \n",
       "4345      710397         21-OCT-21  22-OCT-21   \n",
       "4346      710399         21-OCT-21  22-OCT-21   \n",
       "4347      710402         21-OCT-21  22-OCT-21   \n",
       "4348      710366         21-OCT-21  22-OCT-21   \n",
       "\n",
       "                                       ACCOUTHOLDERNAME  ADDRESS  \\\n",
       "4344                              CURRENT A/C- RIKSSESS      NaN   \n",
       "4345                               CURRENT A/C ABSAZAJJ      NaN   \n",
       "4346                                CALL A/C - CRASGB2L      NaN   \n",
       "4347                                  FRNYUS33-ACCOUNT2      NaN   \n",
       "4348  HONGKONG AND SHANGHAI BANKING CORPORATION LIMITED      NaN   \n",
       "\n",
       "             ACCOUTNO STATEMENTACCOUNTFROM STATEMENTACCOUNTTO PAYMENTTYPE  \\\n",
       "4344         TZ114101             TANZTZTX           TANZTZTX        P105   \n",
       "4345  027631ZAR671201             TANZTZTX           TANZTZTX        P105   \n",
       "4346        332600051             TANZTZTX           TANZTZTX        P105   \n",
       "4347  021087060TANZA2             TANZTZTX           TANZTZTX        P105   \n",
       "4348   848-390951-209             TANZTZTX           TANZTZTX        P105   \n",
       "\n",
       "     CURRENCY  ... CLOSINGBALANCE  CLOSINGBALANCEDRCR STATEMENTBALANCE  \\\n",
       "4344      SEK  ...            NaN                  DR             0.00   \n",
       "4345      ZAR  ...            NaN                  DR       3830295.89   \n",
       "4346      GBP  ...            NaN                  DR             0.00   \n",
       "4347      USD  ...            NaN                  DR         24000.00   \n",
       "4348      CNY  ...            NaN                  DR             0.00   \n",
       "\n",
       "      AVAILABLEBALANCE NBOFTXS               MSGID  RECONSTATUS  CAT1 CAT2  \\\n",
       "4344              0.00       0  BPG221020213720902          NaN   NaN  NaN   \n",
       "4345        3830295.89       0  BPG221020213720869    EXCEPTION   NaN  NaN   \n",
       "4346              0.00       0  BPG221020213720880          NaN   NaN  NaN   \n",
       "4347          24000.00       0  BPG221020213720863          NaN   NaN  NaN   \n",
       "4348              0.00       0  BPG221020213720894          NaN   NaN  NaN   \n",
       "\n",
       "     TRANSACTIONCODE  \n",
       "4344             NaN  \n",
       "4345             NaN  \n",
       "4346             NaN  \n",
       "4347             NaN  \n",
       "4348             NaN  \n",
       "\n",
       "[5 rows x 23 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Get botton 5 columns, if you dont specify, pandas give you the botton 5 columns\n",
    "df.tail(5)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "3ee138cc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 4349 entries, 0 to 4348\n",
      "Data columns (total 23 columns):\n",
      " #   Column                Non-Null Count  Dtype  \n",
      "---  ------                --------------  -----  \n",
      " 0   BANKSTMTID            4349 non-null   int64  \n",
      " 1   STATEMENTDATETIME     4349 non-null   object \n",
      " 2   CREDTTM               4349 non-null   object \n",
      " 3   ACCOUTHOLDERNAME      4349 non-null   object \n",
      " 4   ADDRESS               0 non-null      float64\n",
      " 5   ACCOUTNO              4349 non-null   object \n",
      " 6   STATEMENTACCOUNTFROM  4349 non-null   object \n",
      " 7   STATEMENTACCOUNTTO    4349 non-null   object \n",
      " 8   PAYMENTTYPE           4349 non-null   object \n",
      " 9   CURRENCY              4349 non-null   object \n",
      " 10  MESSAGETYPE           4349 non-null   object \n",
      " 11  OPENINGBALANCE        4349 non-null   float64\n",
      " 12  OPENINGBALANCEDRCR    4349 non-null   object \n",
      " 13  CLOSINGBALANCE        0 non-null      float64\n",
      " 14  CLOSINGBALANCEDRCR    4349 non-null   object \n",
      " 15  STATEMENTBALANCE      4349 non-null   float64\n",
      " 16  AVAILABLEBALANCE      4349 non-null   float64\n",
      " 17  NBOFTXS               4349 non-null   int64  \n",
      " 18  MSGID                 4349 non-null   object \n",
      " 19  RECONSTATUS           463 non-null    object \n",
      " 20  CAT1                  0 non-null      float64\n",
      " 21  CAT2                  0 non-null      float64\n",
      " 22  TRANSACTIONCODE       0 non-null      float64\n",
      "dtypes: float64(8), int64(2), object(13)\n",
      "memory usage: 781.6+ KB\n"
     ]
    }
   ],
   "source": [
    "#Get columns, their number of non null rows, and data type\n",
    "df.info()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fd6d3383",
   "metadata": {},
   "outputs": [],
   "source": [
    "#getting data from a link \n",
    "csv_path2 = 'https://s3-api.us-geo.objectstorage.softlayer.net/cf-courses-data/CognitiveClass/PY0101EN/Chapter%204/Datasets/TopSellingAlbums.csv'\n",
    "df2=pd.read_csv(csv_path2)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1b5889ca",
   "metadata": {},
   "outputs": [],
   "source": [
    "#display first 5 rows\n",
    "df2.head()   #print first 5 rows"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1e9b6f8a",
   "metadata": {},
   "outputs": [],
   "source": [
    "#create pandas from excel instead of csv\n",
    "excel_path = \"C:\\\\_rwey\\\\pers\\\\PDP\\\\IBM\\\\shule\\\\mod2\\\\file\\\\CBSBNKSTMTSxls.xls\"\n",
    "df2=pd.read_excel(excel_path)\n",
    "df2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b0bfbe73",
   "metadata": {},
   "outputs": [],
   "source": [
    "#create dataframe from data, using lists and dictionaries\n",
    "accounts = {'name': ['Ali', 'Asha'], \n",
    "            'AccNo': [34445, 23443]}\n",
    "acc_df = pd.DataFrame(accounts)\n",
    "acc_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5300f0c1",
   "metadata": {},
   "outputs": [],
   "source": [
    "regions = {'name': ['Arusha', 'Mwanza'], 'population':[3455555,6666654]}\n",
    "type(regions)\n",
    "df_regions = pd.DataFrame(regions)\n",
    "df_regions "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7cfe5399",
   "metadata": {},
   "source": [
    "### (1.2) Pandas - data analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d049bc47",
   "metadata": {},
   "outputs": [],
   "source": [
    "#display only one columns\n",
    "df['ACCOUTNO']\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "58a73d42",
   "metadata": {},
   "outputs": [],
   "source": [
    "#display few columns more than one,\n",
    "#for more than one columns we use double square brackets\n",
    "df4 = df[['ACCOUTNO','CURRENCY','OPENINGBALANCEDRCR']]\n",
    "df4 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6ae41bac",
   "metadata": {},
   "outputs": [],
   "source": [
    "#export data from pandas to csv\n",
    "df2.to_csv(\"C:\\\\_rwey\\\\pers\\\\PDP\\\\IBM\\\\shule\\\\mod2\\\\file\\\\df2.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b41c25db",
   "metadata": {},
   "outputs": [],
   "source": [
    "#filter data using one condition\n",
    "df[df['CURRENCY'] == 'USD']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "6b6df53c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>BANKSTMTID</th>\n",
       "      <th>STATEMENTDATETIME</th>\n",
       "      <th>CREDTTM</th>\n",
       "      <th>ACCOUTHOLDERNAME</th>\n",
       "      <th>ADDRESS</th>\n",
       "      <th>ACCOUTNO</th>\n",
       "      <th>STATEMENTACCOUNTFROM</th>\n",
       "      <th>STATEMENTACCOUNTTO</th>\n",
       "      <th>PAYMENTTYPE</th>\n",
       "      <th>CURRENCY</th>\n",
       "      <th>...</th>\n",
       "      <th>CLOSINGBALANCE</th>\n",
       "      <th>CLOSINGBALANCEDRCR</th>\n",
       "      <th>STATEMENTBALANCE</th>\n",
       "      <th>AVAILABLEBALANCE</th>\n",
       "      <th>NBOFTXS</th>\n",
       "      <th>MSGID</th>\n",
       "      <th>RECONSTATUS</th>\n",
       "      <th>CAT1</th>\n",
       "      <th>CAT2</th>\n",
       "      <th>TRANSACTIONCODE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>711065</td>\n",
       "      <td>09-NOV-21</td>\n",
       "      <td>10-NOV-21</td>\n",
       "      <td>SPECIAL GOVERN. PROJ.-CITIUS33</td>\n",
       "      <td>NaN</td>\n",
       "      <td>36125358</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>P105</td>\n",
       "      <td>USD</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DR</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0</td>\n",
       "      <td>BPG101120213836919</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>711071</td>\n",
       "      <td>09-NOV-21</td>\n",
       "      <td>10-NOV-21</td>\n",
       "      <td>CURRENT A/C- CITIUS33</td>\n",
       "      <td>NaN</td>\n",
       "      <td>36113007</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>P105</td>\n",
       "      <td>USD</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DR</td>\n",
       "      <td>1.081130e+08</td>\n",
       "      <td>1.081130e+08</td>\n",
       "      <td>13</td>\n",
       "      <td>BPG101120213836918</td>\n",
       "      <td>RECONCILED</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>711073</td>\n",
       "      <td>09-NOV-21</td>\n",
       "      <td>10-NOV-21</td>\n",
       "      <td>PARIS CLUB BKENGB2L</td>\n",
       "      <td>NaN</td>\n",
       "      <td>80001238</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>P105</td>\n",
       "      <td>USD</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DR</td>\n",
       "      <td>6.391841e+04</td>\n",
       "      <td>6.391841e+04</td>\n",
       "      <td>0</td>\n",
       "      <td>BPG101120213836929</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>711074</td>\n",
       "      <td>09-NOV-21</td>\n",
       "      <td>10-NOV-21</td>\n",
       "      <td>CURRENT A/C - FRNYUS33</td>\n",
       "      <td>NaN</td>\n",
       "      <td>021085897TANZA</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>P105</td>\n",
       "      <td>USD</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>CR</td>\n",
       "      <td>2.788084e+08</td>\n",
       "      <td>2.788084e+08</td>\n",
       "      <td>11</td>\n",
       "      <td>BPG101120213836902</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>711096</td>\n",
       "      <td>09-NOV-21</td>\n",
       "      <td>10-NOV-21</td>\n",
       "      <td>FRNYUS33-ACCOUNT2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>021087060TANZA2</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>P105</td>\n",
       "      <td>USD</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DR</td>\n",
       "      <td>2.400000e+04</td>\n",
       "      <td>2.400000e+04</td>\n",
       "      <td>0</td>\n",
       "      <td>BPG101120213836903</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4329</th>\n",
       "      <td>711900</td>\n",
       "      <td>27-NOV-21</td>\n",
       "      <td>28-NOV-21</td>\n",
       "      <td>CURRENT A/C - FRNYUS33</td>\n",
       "      <td>NaN</td>\n",
       "      <td>021085897TANZA</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>P105</td>\n",
       "      <td>USD</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DR</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0</td>\n",
       "      <td>BPG281120213926451</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4331</th>\n",
       "      <td>710368</td>\n",
       "      <td>21-OCT-21</td>\n",
       "      <td>22-OCT-21</td>\n",
       "      <td>CURRENT A/C CHASUS33</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0011865383</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>P105</td>\n",
       "      <td>USD</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>CR</td>\n",
       "      <td>4.815302e+07</td>\n",
       "      <td>4.815302e+07</td>\n",
       "      <td>4</td>\n",
       "      <td>BPG221020213720852</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4335</th>\n",
       "      <td>710375</td>\n",
       "      <td>21-OCT-21</td>\n",
       "      <td>22-OCT-21</td>\n",
       "      <td>BOT SPECIAL ACCOUNT</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0250210381900</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>P105</td>\n",
       "      <td>USD</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DR</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0</td>\n",
       "      <td>BPG221020213720864</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4338</th>\n",
       "      <td>710380</td>\n",
       "      <td>21-OCT-21</td>\n",
       "      <td>22-OCT-21</td>\n",
       "      <td>SPECIAL GOVERN. PROJ.-CITIUS33</td>\n",
       "      <td>NaN</td>\n",
       "      <td>36125358</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>P105</td>\n",
       "      <td>USD</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DR</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0</td>\n",
       "      <td>BPG221020213720883</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4347</th>\n",
       "      <td>710402</td>\n",
       "      <td>21-OCT-21</td>\n",
       "      <td>22-OCT-21</td>\n",
       "      <td>FRNYUS33-ACCOUNT2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>021087060TANZA2</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>P105</td>\n",
       "      <td>USD</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DR</td>\n",
       "      <td>2.400000e+04</td>\n",
       "      <td>2.400000e+04</td>\n",
       "      <td>0</td>\n",
       "      <td>BPG221020213720863</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1119 rows × 23 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      BANKSTMTID STATEMENTDATETIME    CREDTTM                ACCOUTHOLDERNAME  \\\n",
       "2         711065         09-NOV-21  10-NOV-21  SPECIAL GOVERN. PROJ.-CITIUS33   \n",
       "5         711071         09-NOV-21  10-NOV-21           CURRENT A/C- CITIUS33   \n",
       "6         711073         09-NOV-21  10-NOV-21             PARIS CLUB BKENGB2L   \n",
       "7         711074         09-NOV-21  10-NOV-21          CURRENT A/C - FRNYUS33   \n",
       "16        711096         09-NOV-21  10-NOV-21               FRNYUS33-ACCOUNT2   \n",
       "...          ...               ...        ...                             ...   \n",
       "4329      711900         27-NOV-21  28-NOV-21          CURRENT A/C - FRNYUS33   \n",
       "4331      710368         21-OCT-21  22-OCT-21            CURRENT A/C CHASUS33   \n",
       "4335      710375         21-OCT-21  22-OCT-21             BOT SPECIAL ACCOUNT   \n",
       "4338      710380         21-OCT-21  22-OCT-21  SPECIAL GOVERN. PROJ.-CITIUS33   \n",
       "4347      710402         21-OCT-21  22-OCT-21               FRNYUS33-ACCOUNT2   \n",
       "\n",
       "      ADDRESS         ACCOUTNO STATEMENTACCOUNTFROM STATEMENTACCOUNTTO  \\\n",
       "2         NaN         36125358             TANZTZTX           TANZTZTX   \n",
       "5         NaN         36113007             TANZTZTX           TANZTZTX   \n",
       "6         NaN         80001238             TANZTZTX           TANZTZTX   \n",
       "7         NaN   021085897TANZA             TANZTZTX           TANZTZTX   \n",
       "16        NaN  021087060TANZA2             TANZTZTX           TANZTZTX   \n",
       "...       ...              ...                  ...                ...   \n",
       "4329      NaN   021085897TANZA             TANZTZTX           TANZTZTX   \n",
       "4331      NaN       0011865383             TANZTZTX           TANZTZTX   \n",
       "4335      NaN    0250210381900             TANZTZTX           TANZTZTX   \n",
       "4338      NaN         36125358             TANZTZTX           TANZTZTX   \n",
       "4347      NaN  021087060TANZA2             TANZTZTX           TANZTZTX   \n",
       "\n",
       "     PAYMENTTYPE CURRENCY  ... CLOSINGBALANCE  CLOSINGBALANCEDRCR  \\\n",
       "2           P105      USD  ...            NaN                  DR   \n",
       "5           P105      USD  ...            NaN                  DR   \n",
       "6           P105      USD  ...            NaN                  DR   \n",
       "7           P105      USD  ...            NaN                  CR   \n",
       "16          P105      USD  ...            NaN                  DR   \n",
       "...          ...      ...  ...            ...                 ...   \n",
       "4329        P105      USD  ...            NaN                  DR   \n",
       "4331        P105      USD  ...            NaN                  CR   \n",
       "4335        P105      USD  ...            NaN                  DR   \n",
       "4338        P105      USD  ...            NaN                  DR   \n",
       "4347        P105      USD  ...            NaN                  DR   \n",
       "\n",
       "     STATEMENTBALANCE  AVAILABLEBALANCE NBOFTXS               MSGID  \\\n",
       "2        0.000000e+00      0.000000e+00       0  BPG101120213836919   \n",
       "5        1.081130e+08      1.081130e+08      13  BPG101120213836918   \n",
       "6        6.391841e+04      6.391841e+04       0  BPG101120213836929   \n",
       "7        2.788084e+08      2.788084e+08      11  BPG101120213836902   \n",
       "16       2.400000e+04      2.400000e+04       0  BPG101120213836903   \n",
       "...               ...               ...     ...                 ...   \n",
       "4329     0.000000e+00      0.000000e+00       0  BPG281120213926451   \n",
       "4331     4.815302e+07      4.815302e+07       4  BPG221020213720852   \n",
       "4335     0.000000e+00      0.000000e+00       0  BPG221020213720864   \n",
       "4338     0.000000e+00      0.000000e+00       0  BPG221020213720883   \n",
       "4347     2.400000e+04      2.400000e+04       0  BPG221020213720863   \n",
       "\n",
       "      RECONSTATUS  CAT1 CAT2 TRANSACTIONCODE  \n",
       "2             NaN   NaN  NaN             NaN  \n",
       "5      RECONCILED   NaN  NaN             NaN  \n",
       "6             NaN   NaN  NaN             NaN  \n",
       "7             NaN   NaN  NaN             NaN  \n",
       "16            NaN   NaN  NaN             NaN  \n",
       "...           ...   ...  ...             ...  \n",
       "4329          NaN   NaN  NaN             NaN  \n",
       "4331          NaN   NaN  NaN             NaN  \n",
       "4335          NaN   NaN  NaN             NaN  \n",
       "4338          NaN   NaN  NaN             NaN  \n",
       "4347          NaN   NaN  NaN             NaN  \n",
       "\n",
       "[1119 rows x 23 columns]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#alternative way to filter data using one condition\n",
    "#with this method you can reuse your mask several times and reduce size of your program\n",
    "mask = (df['CURRENCY'] == 'USD')\n",
    "df[mask]\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "0af98b4b",
   "metadata": {},
   "outputs": [],
   "source": [
    "#you can put multiple conditions\n",
    "#remember to use brackets around every single condition\n",
    "#use \"&\" for AND and \"|\" for OR\n",
    "mask = ((df['CURRENCY'] == 'USD') & (df['CLOSINGBALANCEDRCR'] == 'CR'))\n",
    "df5 = df[mask]\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4e3e6dec",
   "metadata": {},
   "outputs": [],
   "source": [
    "#export your results\n",
    "df5.to_csv(\"C:\\\\_rwey\\\\pers\\\\PDP\\\\IBM\\\\shule\\\\mod2\\\\file\\\\usdcr.csv.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1edc2aad",
   "metadata": {},
   "outputs": [],
   "source": [
    "#run condition using OR\n",
    "#Shape before condition\n",
    "df.shape  #(4349, 23)\n",
    "#df3  = df[(df['CURRENCY']=='EUR') | (df['CLOSINGBALANCEDRCR']=='DR') ]\n",
    "mask = (df['CURRENCY']=='EUR') | (df['CLOSINGBALANCEDRCR']=='DR')\n",
    "df3 = df[mask]\n",
    "\n",
    "#shape after condition\n",
    "df3.shape # (722, 23)\n",
    "\n",
    "#display first 3 rows\n",
    "df3.head(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9419cf1d",
   "metadata": {},
   "outputs": [],
   "source": [
    "#get data using location and index locations \n",
    "#formula is dataframe.loc[name of row, name of column] or dataframe.iloc[index of row, index of column]\n",
    "#index location start with 0\n",
    "\n",
    "df3.head() #can be used to display names of columns\n",
    "df3.loc[2,'ACCOUTHOLDERNAME']\n",
    "df3.iloc[1,3]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8b35f1f2",
   "metadata": {},
   "outputs": [],
   "source": [
    "#slicing dataframe\n",
    "#formula is dataframe.iloc[index of start_row:index of end_row,index of start_column:index of end_column]\n",
    "# OR dataframe.loc[name of start_row:name of end_row, name of start_column:name of end_column]\n",
    "#if you put : it will take all columns or rows\n",
    "#slicing do not display last column or row, it ends at last minus one\n",
    "#df3.iloc[:,:]\n",
    "df3.iloc[:,2:5]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4db5f0f2",
   "metadata": {},
   "outputs": [],
   "source": [
    "#recall slicing of list also do not return the last character but ends with last minus one, and index start from zero \n",
    "name = 'rajabu'\n",
    "name[2:6]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "48619dfb",
   "metadata": {},
   "outputs": [],
   "source": [
    "df3.head()\n",
    "#slicing 3rd to 50th rows and 4th (ACCOUTHOLDERNAME) to 7th (STATEMENTACCOUNTTO) column\n",
    "df3.iloc[2:49,3:8]\n",
    "#slicing 3rd to 50th rows and all columns\n",
    "df3.iloc[2:49,:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 180,
   "id": "0f1f7ef7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CREDTTM</th>\n",
       "      <th>ACCOUTHOLDERNAME</th>\n",
       "      <th>ADDRESS</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>10-NOV-21</td>\n",
       "      <td>NOSTRO</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10-NOV-21</td>\n",
       "      <td>PARIS CLUB-BKENGB2L</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>10-NOV-21</td>\n",
       "      <td>SPECIAL GOVERN. PROJ.-CITIUS33</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>10-NOV-21</td>\n",
       "      <td>CENTRAL BANK OF KENYA</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>10-NOV-21</td>\n",
       "      <td>EUR 2 DAYS NOTICE BISBCHBB</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4344</th>\n",
       "      <td>22-OCT-21</td>\n",
       "      <td>CURRENT A/C- RIKSSESS</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4345</th>\n",
       "      <td>22-OCT-21</td>\n",
       "      <td>CURRENT A/C ABSAZAJJ</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4346</th>\n",
       "      <td>22-OCT-21</td>\n",
       "      <td>CALL A/C - CRASGB2L</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4347</th>\n",
       "      <td>22-OCT-21</td>\n",
       "      <td>FRNYUS33-ACCOUNT2</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4348</th>\n",
       "      <td>22-OCT-21</td>\n",
       "      <td>HONGKONG AND SHANGHAI BANKING CORPORATION LIMITED</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>4349 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        CREDTTM                                   ACCOUTHOLDERNAME  ADDRESS\n",
       "0     10-NOV-21                                             NOSTRO      NaN\n",
       "1     10-NOV-21                                PARIS CLUB-BKENGB2L      NaN\n",
       "2     10-NOV-21                     SPECIAL GOVERN. PROJ.-CITIUS33      NaN\n",
       "3     10-NOV-21                              CENTRAL BANK OF KENYA      NaN\n",
       "4     10-NOV-21                         EUR 2 DAYS NOTICE BISBCHBB      NaN\n",
       "...         ...                                                ...      ...\n",
       "4344  22-OCT-21                              CURRENT A/C- RIKSSESS      NaN\n",
       "4345  22-OCT-21                               CURRENT A/C ABSAZAJJ      NaN\n",
       "4346  22-OCT-21                                CALL A/C - CRASGB2L      NaN\n",
       "4347  22-OCT-21                                  FRNYUS33-ACCOUNT2      NaN\n",
       "4348  22-OCT-21  HONGKONG AND SHANGHAI BANKING CORPORATION LIMITED      NaN\n",
       "\n",
       "[4349 rows x 3 columns]"
      ]
     },
     "execution_count": 180,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#slicing using loc\n",
    "#df3.loc[2:49,'ACCOUTHOLDERNAME':'STATEMENTACCOUNTTO']\n",
    "df.head(2)\n",
    "#slice all rows and columns from CREDTTM TO ADDRESS\n",
    "df.loc[:,'CREDTTM':'ADDRESS']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ee9142c1",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Access the value on the first row and the first column\n",
    "df1.iloc[0, 0]\n",
    "\n",
    "# Access the value on the second row and the first column\n",
    "df1.iloc[1,0]\n",
    "\n",
    "# Access the value on the first row and the third column\n",
    "df1.iloc[0,2]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "93082d9a",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.iloc[1,3]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "84d2e223",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.loc[1,'ACCOUTHOLDERNAME']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 181,
   "id": "be7e3c1a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>BANKSTMTID</th>\n",
       "      <th>STATEMENTDATETIME</th>\n",
       "      <th>CREDTTM</th>\n",
       "      <th>ACCOUTHOLDERNAME</th>\n",
       "      <th>ADDRESS</th>\n",
       "      <th>ACCOUTNO</th>\n",
       "      <th>STATEMENTACCOUNTFROM</th>\n",
       "      <th>STATEMENTACCOUNTTO</th>\n",
       "      <th>PAYMENTTYPE</th>\n",
       "      <th>CURRENCY</th>\n",
       "      <th>...</th>\n",
       "      <th>CLOSINGBALANCE</th>\n",
       "      <th>CLOSINGBALANCEDRCR</th>\n",
       "      <th>STATEMENTBALANCE</th>\n",
       "      <th>AVAILABLEBALANCE</th>\n",
       "      <th>NBOFTXS</th>\n",
       "      <th>MSGID</th>\n",
       "      <th>RECONSTATUS</th>\n",
       "      <th>CAT1</th>\n",
       "      <th>CAT2</th>\n",
       "      <th>TRANSACTIONCODE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>711064</td>\n",
       "      <td>09-NOV-21</td>\n",
       "      <td>10-NOV-21</td>\n",
       "      <td>NOSTRO</td>\n",
       "      <td>NaN</td>\n",
       "      <td>995529296HQ</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>P105</td>\n",
       "      <td>EUR</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DR</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0</td>\n",
       "      <td>BPG101120213836940</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>711066</td>\n",
       "      <td>09-NOV-21</td>\n",
       "      <td>10-NOV-21</td>\n",
       "      <td>PARIS CLUB-BKENGB2L</td>\n",
       "      <td>NaN</td>\n",
       "      <td>42945003</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>P105</td>\n",
       "      <td>GBP</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>CR</td>\n",
       "      <td>1.000000e-02</td>\n",
       "      <td>1.000000e-02</td>\n",
       "      <td>0</td>\n",
       "      <td>BPG101120213836923</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>711065</td>\n",
       "      <td>09-NOV-21</td>\n",
       "      <td>10-NOV-21</td>\n",
       "      <td>SPECIAL GOVERN. PROJ.-CITIUS33</td>\n",
       "      <td>NaN</td>\n",
       "      <td>36125358</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>P105</td>\n",
       "      <td>USD</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DR</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0</td>\n",
       "      <td>BPG101120213836919</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>711067</td>\n",
       "      <td>09-NOV-21</td>\n",
       "      <td>10-NOV-21</td>\n",
       "      <td>CENTRAL BANK OF KENYA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1000172568</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>P105</td>\n",
       "      <td>KES</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>CR</td>\n",
       "      <td>2.717207e+08</td>\n",
       "      <td>2.717207e+08</td>\n",
       "      <td>10</td>\n",
       "      <td>BPG101120213836911</td>\n",
       "      <td>RECONCILED</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>711070</td>\n",
       "      <td>09-NOV-21</td>\n",
       "      <td>10-NOV-21</td>\n",
       "      <td>EUR 2 DAYS NOTICE BISBCHBB</td>\n",
       "      <td>NaN</td>\n",
       "      <td>EUR2D</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>P105</td>\n",
       "      <td>EUR</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DR</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0</td>\n",
       "      <td>BPG101120213836933</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4344</th>\n",
       "      <td>710396</td>\n",
       "      <td>21-OCT-21</td>\n",
       "      <td>22-OCT-21</td>\n",
       "      <td>CURRENT A/C- RIKSSESS</td>\n",
       "      <td>NaN</td>\n",
       "      <td>TZ114101</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>P105</td>\n",
       "      <td>SEK</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DR</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0</td>\n",
       "      <td>BPG221020213720902</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4345</th>\n",
       "      <td>710397</td>\n",
       "      <td>21-OCT-21</td>\n",
       "      <td>22-OCT-21</td>\n",
       "      <td>CURRENT A/C ABSAZAJJ</td>\n",
       "      <td>NaN</td>\n",
       "      <td>027631ZAR671201</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>P105</td>\n",
       "      <td>ZAR</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DR</td>\n",
       "      <td>3.830296e+06</td>\n",
       "      <td>3.830296e+06</td>\n",
       "      <td>0</td>\n",
       "      <td>BPG221020213720869</td>\n",
       "      <td>EXCEPTION</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4346</th>\n",
       "      <td>710399</td>\n",
       "      <td>21-OCT-21</td>\n",
       "      <td>22-OCT-21</td>\n",
       "      <td>CALL A/C - CRASGB2L</td>\n",
       "      <td>NaN</td>\n",
       "      <td>332600051</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>P105</td>\n",
       "      <td>GBP</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DR</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0</td>\n",
       "      <td>BPG221020213720880</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4347</th>\n",
       "      <td>710402</td>\n",
       "      <td>21-OCT-21</td>\n",
       "      <td>22-OCT-21</td>\n",
       "      <td>FRNYUS33-ACCOUNT2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>021087060TANZA2</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>P105</td>\n",
       "      <td>USD</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DR</td>\n",
       "      <td>2.400000e+04</td>\n",
       "      <td>2.400000e+04</td>\n",
       "      <td>0</td>\n",
       "      <td>BPG221020213720863</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4348</th>\n",
       "      <td>710366</td>\n",
       "      <td>21-OCT-21</td>\n",
       "      <td>22-OCT-21</td>\n",
       "      <td>HONGKONG AND SHANGHAI BANKING CORPORATION LIMITED</td>\n",
       "      <td>NaN</td>\n",
       "      <td>848-390951-209</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>TANZTZTX</td>\n",
       "      <td>P105</td>\n",
       "      <td>CNY</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DR</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0</td>\n",
       "      <td>BPG221020213720894</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>4349 rows × 23 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      BANKSTMTID STATEMENTDATETIME    CREDTTM  \\\n",
       "0         711064         09-NOV-21  10-NOV-21   \n",
       "1         711066         09-NOV-21  10-NOV-21   \n",
       "2         711065         09-NOV-21  10-NOV-21   \n",
       "3         711067         09-NOV-21  10-NOV-21   \n",
       "4         711070         09-NOV-21  10-NOV-21   \n",
       "...          ...               ...        ...   \n",
       "4344      710396         21-OCT-21  22-OCT-21   \n",
       "4345      710397         21-OCT-21  22-OCT-21   \n",
       "4346      710399         21-OCT-21  22-OCT-21   \n",
       "4347      710402         21-OCT-21  22-OCT-21   \n",
       "4348      710366         21-OCT-21  22-OCT-21   \n",
       "\n",
       "                                       ACCOUTHOLDERNAME  ADDRESS  \\\n",
       "0                                                NOSTRO      NaN   \n",
       "1                                   PARIS CLUB-BKENGB2L      NaN   \n",
       "2                        SPECIAL GOVERN. PROJ.-CITIUS33      NaN   \n",
       "3                                 CENTRAL BANK OF KENYA      NaN   \n",
       "4                            EUR 2 DAYS NOTICE BISBCHBB      NaN   \n",
       "...                                                 ...      ...   \n",
       "4344                              CURRENT A/C- RIKSSESS      NaN   \n",
       "4345                               CURRENT A/C ABSAZAJJ      NaN   \n",
       "4346                                CALL A/C - CRASGB2L      NaN   \n",
       "4347                                  FRNYUS33-ACCOUNT2      NaN   \n",
       "4348  HONGKONG AND SHANGHAI BANKING CORPORATION LIMITED      NaN   \n",
       "\n",
       "             ACCOUTNO STATEMENTACCOUNTFROM STATEMENTACCOUNTTO PAYMENTTYPE  \\\n",
       "0         995529296HQ             TANZTZTX           TANZTZTX        P105   \n",
       "1            42945003             TANZTZTX           TANZTZTX        P105   \n",
       "2            36125358             TANZTZTX           TANZTZTX        P105   \n",
       "3          1000172568             TANZTZTX           TANZTZTX        P105   \n",
       "4               EUR2D             TANZTZTX           TANZTZTX        P105   \n",
       "...               ...                  ...                ...         ...   \n",
       "4344         TZ114101             TANZTZTX           TANZTZTX        P105   \n",
       "4345  027631ZAR671201             TANZTZTX           TANZTZTX        P105   \n",
       "4346        332600051             TANZTZTX           TANZTZTX        P105   \n",
       "4347  021087060TANZA2             TANZTZTX           TANZTZTX        P105   \n",
       "4348   848-390951-209             TANZTZTX           TANZTZTX        P105   \n",
       "\n",
       "     CURRENCY  ... CLOSINGBALANCE  CLOSINGBALANCEDRCR STATEMENTBALANCE  \\\n",
       "0         EUR  ...            NaN                  DR     0.000000e+00   \n",
       "1         GBP  ...            NaN                  CR     1.000000e-02   \n",
       "2         USD  ...            NaN                  DR     0.000000e+00   \n",
       "3         KES  ...            NaN                  CR     2.717207e+08   \n",
       "4         EUR  ...            NaN                  DR     0.000000e+00   \n",
       "...       ...  ...            ...                 ...              ...   \n",
       "4344      SEK  ...            NaN                  DR     0.000000e+00   \n",
       "4345      ZAR  ...            NaN                  DR     3.830296e+06   \n",
       "4346      GBP  ...            NaN                  DR     0.000000e+00   \n",
       "4347      USD  ...            NaN                  DR     2.400000e+04   \n",
       "4348      CNY  ...            NaN                  DR     0.000000e+00   \n",
       "\n",
       "      AVAILABLEBALANCE NBOFTXS               MSGID  RECONSTATUS  CAT1 CAT2  \\\n",
       "0         0.000000e+00       0  BPG101120213836940          NaN   NaN  NaN   \n",
       "1         1.000000e-02       0  BPG101120213836923          NaN   NaN  NaN   \n",
       "2         0.000000e+00       0  BPG101120213836919          NaN   NaN  NaN   \n",
       "3         2.717207e+08      10  BPG101120213836911   RECONCILED   NaN  NaN   \n",
       "4         0.000000e+00       0  BPG101120213836933          NaN   NaN  NaN   \n",
       "...                ...     ...                 ...          ...   ...  ...   \n",
       "4344      0.000000e+00       0  BPG221020213720902          NaN   NaN  NaN   \n",
       "4345      3.830296e+06       0  BPG221020213720869    EXCEPTION   NaN  NaN   \n",
       "4346      0.000000e+00       0  BPG221020213720880          NaN   NaN  NaN   \n",
       "4347      2.400000e+04       0  BPG221020213720863          NaN   NaN  NaN   \n",
       "4348      0.000000e+00       0  BPG221020213720894          NaN   NaN  NaN   \n",
       "\n",
       "     TRANSACTIONCODE  \n",
       "0                NaN  \n",
       "1                NaN  \n",
       "2                NaN  \n",
       "3                NaN  \n",
       "4                NaN  \n",
       "...              ...  \n",
       "4344             NaN  \n",
       "4345             NaN  \n",
       "4346             NaN  \n",
       "4347             NaN  \n",
       "4348             NaN  \n",
       "\n",
       "[4349 rows x 23 columns]"
      ]
     },
     "execution_count": 181,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "91318e11",
   "metadata": {},
   "outputs": [],
   "source": [
    "#getting summary of data using pivot\n",
    "df.pivot_table(index='BANKSTMTID')\n",
    "df.pivot_table(index=['BANKSTMTID', 'ACCOUTNO'])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 186,
   "id": "240caf7b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>CURRENCY</th>\n",
       "      <th>AUD</th>\n",
       "      <th>CNY</th>\n",
       "      <th>EUR</th>\n",
       "      <th>GBP</th>\n",
       "      <th>JPY</th>\n",
       "      <th>KES</th>\n",
       "      <th>RWF</th>\n",
       "      <th>SDR</th>\n",
       "      <th>SEK</th>\n",
       "      <th>UGX</th>\n",
       "      <th>USD</th>\n",
       "      <th>ZAR</th>\n",
       "      <th>ZMW</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PAYMENTTYPE</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>P105</th>\n",
       "      <td>203</td>\n",
       "      <td>405</td>\n",
       "      <td>797</td>\n",
       "      <td>608</td>\n",
       "      <td>101</td>\n",
       "      <td>304</td>\n",
       "      <td>102</td>\n",
       "      <td>303</td>\n",
       "      <td>101</td>\n",
       "      <td>102</td>\n",
       "      <td>1119</td>\n",
       "      <td>102</td>\n",
       "      <td>102</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "CURRENCY     AUD  CNY  EUR  GBP  JPY  KES  RWF  SDR  SEK  UGX   USD  ZAR  ZMW\n",
       "PAYMENTTYPE                                                                  \n",
       "P105         203  405  797  608  101  304  102  303  101  102  1119  102  102"
      ]
     },
     "execution_count": 186,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#getting summary of data using crosstab\n",
    "df.head(1)\n",
    "#pd.crosstab(column, row)\n",
    "pd.crosstab(df['PAYMENTTYPE'],df['CURRENCY'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 188,
   "id": "fece4ec4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>CURRENCY</th>\n",
       "      <th>AUD</th>\n",
       "      <th>CNY</th>\n",
       "      <th>EUR</th>\n",
       "      <th>GBP</th>\n",
       "      <th>JPY</th>\n",
       "      <th>KES</th>\n",
       "      <th>RWF</th>\n",
       "      <th>SDR</th>\n",
       "      <th>SEK</th>\n",
       "      <th>UGX</th>\n",
       "      <th>USD</th>\n",
       "      <th>ZAR</th>\n",
       "      <th>ZMW</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>STATEMENTDATETIME</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>01-DEC-21</th>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>8</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01-NOV-21</th>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>8</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01-OCT-21</th>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>8</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01-SEP-21</th>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>02-DEC-21</th>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>8</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29-SEP-21</th>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>8</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30-NOV-21</th>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>8</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30-OCT-21</th>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>8</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30-SEP-21</th>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>8</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31-OCT-21</th>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>8</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>102 rows × 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "CURRENCY           AUD  CNY  EUR  GBP  JPY  KES  RWF  SDR  SEK  UGX  USD  ZAR  \\\n",
       "STATEMENTDATETIME                                                               \n",
       "01-DEC-21            2    4    8    6    1    3    1    3    1    1   11    1   \n",
       "01-NOV-21            2    4    8    6    1    3    1    3    1    1   11    1   \n",
       "01-OCT-21            2    4    8    6    1    3    1    3    1    1   11    1   \n",
       "01-SEP-21            2    4    7    6    1    3    1    3    1    1   11    1   \n",
       "02-DEC-21            2    4    8    6    1    3    1    3    1    1   11    1   \n",
       "...                ...  ...  ...  ...  ...  ...  ...  ...  ...  ...  ...  ...   \n",
       "29-SEP-21            2    4    8    6    1    3    1    3    1    1   11    1   \n",
       "30-NOV-21            2    4    8    6    1    3    1    3    1    1   11    1   \n",
       "30-OCT-21            2    4    8    6    1    3    1    3    1    1   11    1   \n",
       "30-SEP-21            2    4    8    6    1    3    1    3    1    1   11    1   \n",
       "31-OCT-21            2    4    8    6    1    3    1    3    1    1   11    1   \n",
       "\n",
       "CURRENCY           ZMW  \n",
       "STATEMENTDATETIME       \n",
       "01-DEC-21            1  \n",
       "01-NOV-21            1  \n",
       "01-OCT-21            1  \n",
       "01-SEP-21            1  \n",
       "02-DEC-21            1  \n",
       "...                ...  \n",
       "29-SEP-21            1  \n",
       "30-NOV-21            1  \n",
       "30-OCT-21            1  \n",
       "30-SEP-21            1  \n",
       "31-OCT-21            1  \n",
       "\n",
       "[102 rows x 13 columns]"
      ]
     },
     "execution_count": 188,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(1)\n",
    "#summarize information of date of transaaction versus currency\n",
    "pd.crosstab(df['STATEMENTDATETIME'],df['CURRENCY'])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 191,
   "id": "f2b7ae8c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>AVAILABLEBALANCE</th>\n",
       "      <th>NBOFTXS</th>\n",
       "      <th>OPENINGBALANCE</th>\n",
       "      <th>STATEMENTBALANCE</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ACCOUTNO</th>\n",
       "      <th>BANKSTMTID</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"5\" valign=\"top\">0011666700039</th>\n",
       "      <th>708069</th>\n",
       "      <td>1.777282e+09</td>\n",
       "      <td>0</td>\n",
       "      <td>1.777282e+09</td>\n",
       "      <td>1.777282e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>708152</th>\n",
       "      <td>1.777282e+09</td>\n",
       "      <td>0</td>\n",
       "      <td>1.777282e+09</td>\n",
       "      <td>1.777282e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>708160</th>\n",
       "      <td>1.777282e+09</td>\n",
       "      <td>0</td>\n",
       "      <td>1.777282e+09</td>\n",
       "      <td>1.777282e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>708357</th>\n",
       "      <td>1.777282e+09</td>\n",
       "      <td>0</td>\n",
       "      <td>1.777282e+09</td>\n",
       "      <td>1.777282e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>708366</th>\n",
       "      <td>1.777282e+09</td>\n",
       "      <td>0</td>\n",
       "      <td>1.777282e+09</td>\n",
       "      <td>1.777282e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"5\" valign=\"top\">USD2D</th>\n",
       "      <th>712439</th>\n",
       "      <td>7.883359e+04</td>\n",
       "      <td>0</td>\n",
       "      <td>7.883359e+04</td>\n",
       "      <td>7.883359e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>712471</th>\n",
       "      <td>7.883359e+04</td>\n",
       "      <td>0</td>\n",
       "      <td>7.883359e+04</td>\n",
       "      <td>7.883359e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>712517</th>\n",
       "      <td>7.883359e+04</td>\n",
       "      <td>0</td>\n",
       "      <td>7.883359e+04</td>\n",
       "      <td>7.883359e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>712564</th>\n",
       "      <td>7.883359e+04</td>\n",
       "      <td>0</td>\n",
       "      <td>7.883359e+04</td>\n",
       "      <td>7.883359e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>712615</th>\n",
       "      <td>7.883359e+04</td>\n",
       "      <td>0</td>\n",
       "      <td>7.883359e+04</td>\n",
       "      <td>7.883359e+04</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>4349 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                          AVAILABLEBALANCE  NBOFTXS  OPENINGBALANCE  \\\n",
       "ACCOUTNO      BANKSTMTID                                              \n",
       "0011666700039 708069          1.777282e+09        0    1.777282e+09   \n",
       "              708152          1.777282e+09        0    1.777282e+09   \n",
       "              708160          1.777282e+09        0    1.777282e+09   \n",
       "              708357          1.777282e+09        0    1.777282e+09   \n",
       "              708366          1.777282e+09        0    1.777282e+09   \n",
       "...                                    ...      ...             ...   \n",
       "USD2D         712439          7.883359e+04        0    7.883359e+04   \n",
       "              712471          7.883359e+04        0    7.883359e+04   \n",
       "              712517          7.883359e+04        0    7.883359e+04   \n",
       "              712564          7.883359e+04        0    7.883359e+04   \n",
       "              712615          7.883359e+04        0    7.883359e+04   \n",
       "\n",
       "                          STATEMENTBALANCE  \n",
       "ACCOUTNO      BANKSTMTID                    \n",
       "0011666700039 708069          1.777282e+09  \n",
       "              708152          1.777282e+09  \n",
       "              708160          1.777282e+09  \n",
       "              708357          1.777282e+09  \n",
       "              708366          1.777282e+09  \n",
       "...                                    ...  \n",
       "USD2D         712439          7.883359e+04  \n",
       "              712471          7.883359e+04  \n",
       "              712517          7.883359e+04  \n",
       "              712564          7.883359e+04  \n",
       "              712615          7.883359e+04  \n",
       "\n",
       "[4349 rows x 4 columns]"
      ]
     },
     "execution_count": 191,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#df.pivot_table(index='BANKSTMTID')\n",
    "df.pivot_table(index=['ACCOUTNO','BANKSTMTID'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 192,
   "id": "01808d0b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>BANKSTMTID</th>\n",
       "      <th>ADDRESS</th>\n",
       "      <th>OPENINGBALANCE</th>\n",
       "      <th>CLOSINGBALANCE</th>\n",
       "      <th>STATEMENTBALANCE</th>\n",
       "      <th>AVAILABLEBALANCE</th>\n",
       "      <th>NBOFTXS</th>\n",
       "      <th>CAT1</th>\n",
       "      <th>CAT2</th>\n",
       "      <th>TRANSACTIONCODE</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ACCOUTNO</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0011666700039</th>\n",
       "      <td>72455579</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.196107e+11</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.196103e+11</td>\n",
       "      <td>1.196103e+11</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0011865383</th>\n",
       "      <td>72458952</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.602741e+09</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.612814e+09</td>\n",
       "      <td>3.612814e+09</td>\n",
       "      <td>276</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0051688</th>\n",
       "      <td>72460301</td>\n",
       "      <td>0.0</td>\n",
       "      <td>9.647216e+08</td>\n",
       "      <td>0.0</td>\n",
       "      <td>9.649693e+08</td>\n",
       "      <td>9.649693e+08</td>\n",
       "      <td>52</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01287560123789</th>\n",
       "      <td>72454991</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.752661e+10</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.261526e+10</td>\n",
       "      <td>2.261526e+10</td>\n",
       "      <td>149</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>021085897TANZA</th>\n",
       "      <td>72457435</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.315540e+10</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.309825e+10</td>\n",
       "      <td>2.309825e+10</td>\n",
       "      <td>798</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>021087060TANZA2</th>\n",
       "      <td>72457366</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.776000e+06</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.800000e+06</td>\n",
       "      <td>1.800000e+06</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0250210381900</th>\n",
       "      <td>72450443</td>\n",
       "      <td>0.0</td>\n",
       "      <td>6.764412e+06</td>\n",
       "      <td>0.0</td>\n",
       "      <td>6.764412e+06</td>\n",
       "      <td>6.764412e+06</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>027631ZAR671201</th>\n",
       "      <td>72449825</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.078098e+09</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.072779e+09</td>\n",
       "      <td>1.072779e+09</td>\n",
       "      <td>49</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>03-010-0003</th>\n",
       "      <td>71738694</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.149455e+08</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.149455e+08</td>\n",
       "      <td>2.149455e+08</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0908004/TANZANIA</th>\n",
       "      <td>71747562</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.148324e+09</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.088071e+09</td>\n",
       "      <td>2.088071e+09</td>\n",
       "      <td>15</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>09200281763-9</th>\n",
       "      <td>72454456</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.361156e+07</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.697839e+07</td>\n",
       "      <td>3.697839e+07</td>\n",
       "      <td>13</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1000025007</th>\n",
       "      <td>72458514</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.128118e+09</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.123645e+09</td>\n",
       "      <td>3.123645e+09</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1000172568</th>\n",
       "      <td>71745866</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.416348e+10</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.422656e+10</td>\n",
       "      <td>2.422656e+10</td>\n",
       "      <td>1037</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1000225653</th>\n",
       "      <td>72458882</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100957550700</th>\n",
       "      <td>72458389</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4.008167e+08</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4.008167e+08</td>\n",
       "      <td>4.008167e+08</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100957550707</th>\n",
       "      <td>72453300</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.812378e+08</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.614889e+08</td>\n",
       "      <td>5.614889e+08</td>\n",
       "      <td>48</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1077008</th>\n",
       "      <td>72462016</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.542125e+08</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.605766e+08</td>\n",
       "      <td>2.605766e+08</td>\n",
       "      <td>59</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11426370</th>\n",
       "      <td>72456255</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.617653e+08</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.617647e+08</td>\n",
       "      <td>1.617647e+08</td>\n",
       "      <td>6</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>332600051</th>\n",
       "      <td>72458146</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.550000e+02</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.550000e+02</td>\n",
       "      <td>3.550000e+02</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>332604041</th>\n",
       "      <td>72459451</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36113007</th>\n",
       "      <td>72456129</td>\n",
       "      <td>0.0</td>\n",
       "      <td>9.964824e+09</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.000870e+10</td>\n",
       "      <td>1.000870e+10</td>\n",
       "      <td>1410</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36125358</th>\n",
       "      <td>72451683</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3922761811</th>\n",
       "      <td>72458647</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.194751e+10</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.243187e+10</td>\n",
       "      <td>5.243187e+10</td>\n",
       "      <td>124</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>400886800200EUR</th>\n",
       "      <td>71748053</td>\n",
       "      <td>0.0</td>\n",
       "      <td>6.962383e+06</td>\n",
       "      <td>0.0</td>\n",
       "      <td>6.962383e+06</td>\n",
       "      <td>6.962383e+06</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42940001</th>\n",
       "      <td>71746315</td>\n",
       "      <td>0.0</td>\n",
       "      <td>7.366372e+07</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.702526e+08</td>\n",
       "      <td>1.702526e+08</td>\n",
       "      <td>20</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42945003</th>\n",
       "      <td>71742098</td>\n",
       "      <td>0.0</td>\n",
       "      <td>7.000000e-01</td>\n",
       "      <td>0.0</td>\n",
       "      <td>7.000000e-01</td>\n",
       "      <td>7.000000e-01</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44709459354</th>\n",
       "      <td>71742900</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.715695e+09</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.715695e+09</td>\n",
       "      <td>2.715695e+09</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5040040720</th>\n",
       "      <td>71745300</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4.535445e+07</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4.537457e+07</td>\n",
       "      <td>4.537457e+07</td>\n",
       "      <td>9</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5516080</th>\n",
       "      <td>71743916</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4.603792e+07</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4.603781e+07</td>\n",
       "      <td>4.603781e+07</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5520975</th>\n",
       "      <td>71746969</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.415192e+08</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.399370e+08</td>\n",
       "      <td>2.399370e+08</td>\n",
       "      <td>10</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73356256</th>\n",
       "      <td>71745957</td>\n",
       "      <td>0.0</td>\n",
       "      <td>9.981265e+07</td>\n",
       "      <td>0.0</td>\n",
       "      <td>7.222441e+07</td>\n",
       "      <td>7.222441e+07</td>\n",
       "      <td>9</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80001238</th>\n",
       "      <td>71746897</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4.474289e+06</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4.474289e+06</td>\n",
       "      <td>4.474289e+06</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>848-390951-209</th>\n",
       "      <td>71748093</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.011629e+08</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.011629e+08</td>\n",
       "      <td>1.011629e+08</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>86601638</th>\n",
       "      <td>71742170</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.408869e+08</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.433091e+08</td>\n",
       "      <td>5.433091e+08</td>\n",
       "      <td>304</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>995529296HQ</th>\n",
       "      <td>61823005</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AUD2D</th>\n",
       "      <td>71745195</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.423528e+06</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.423528e+06</td>\n",
       "      <td>3.423528e+06</td>\n",
       "      <td>10</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>EUR2D</th>\n",
       "      <td>71749891</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.130868e+05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.130325e+05</td>\n",
       "      <td>8.130325e+05</td>\n",
       "      <td>4</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>GBP2D</th>\n",
       "      <td>71748248</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.842173e+07</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.836913e+07</td>\n",
       "      <td>2.836913e+07</td>\n",
       "      <td>5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SDR2D</th>\n",
       "      <td>71750537</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.497300e+04</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.497300e+04</td>\n",
       "      <td>1.497300e+04</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>TANZANIA</th>\n",
       "      <td>71746352</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.233180e+10</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.233180e+10</td>\n",
       "      <td>1.233180e+10</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>TANZANIA-SDR</th>\n",
       "      <td>71750118</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.366148e+10</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.366145e+10</td>\n",
       "      <td>1.366145e+10</td>\n",
       "      <td>13</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>TZ114101</th>\n",
       "      <td>71748105</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.040102e+08</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.037020e+08</td>\n",
       "      <td>5.037020e+08</td>\n",
       "      <td>6</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>USD2D</th>\n",
       "      <td>71748379</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.137320e+06</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.137331e+06</td>\n",
       "      <td>8.137331e+06</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  BANKSTMTID  ADDRESS  OPENINGBALANCE  CLOSINGBALANCE  \\\n",
       "ACCOUTNO                                                                \n",
       "0011666700039       72455579      0.0    1.196107e+11             0.0   \n",
       "0011865383          72458952      0.0    3.602741e+09             0.0   \n",
       "0051688             72460301      0.0    9.647216e+08             0.0   \n",
       "01287560123789      72454991      0.0    1.752661e+10             0.0   \n",
       "021085897TANZA      72457435      0.0    2.315540e+10             0.0   \n",
       "021087060TANZA2     72457366      0.0    1.776000e+06             0.0   \n",
       "0250210381900       72450443      0.0    6.764412e+06             0.0   \n",
       "027631ZAR671201     72449825      0.0    1.078098e+09             0.0   \n",
       "03-010-0003         71738694      0.0    2.149455e+08             0.0   \n",
       "0908004/TANZANIA    71747562      0.0    2.148324e+09             0.0   \n",
       "09200281763-9       72454456      0.0    3.361156e+07             0.0   \n",
       "1000025007          72458514      0.0    3.128118e+09             0.0   \n",
       "1000172568          71745866      0.0    2.416348e+10             0.0   \n",
       "1000225653          72458882      0.0    0.000000e+00             0.0   \n",
       "100957550700        72458389      0.0    4.008167e+08             0.0   \n",
       "100957550707        72453300      0.0    5.812378e+08             0.0   \n",
       "1077008             72462016      0.0    2.542125e+08             0.0   \n",
       "11426370            72456255      0.0    1.617653e+08             0.0   \n",
       "332600051           72458146      0.0    3.550000e+02             0.0   \n",
       "332604041           72459451      0.0    0.000000e+00             0.0   \n",
       "36113007            72456129      0.0    9.964824e+09             0.0   \n",
       "36125358            72451683      0.0    0.000000e+00             0.0   \n",
       "3922761811          72458647      0.0    5.194751e+10             0.0   \n",
       "400886800200EUR     71748053      0.0    6.962383e+06             0.0   \n",
       "42940001            71746315      0.0    7.366372e+07             0.0   \n",
       "42945003            71742098      0.0    7.000000e-01             0.0   \n",
       "44709459354         71742900      0.0    2.715695e+09             0.0   \n",
       "5040040720          71745300      0.0    4.535445e+07             0.0   \n",
       "5516080             71743916      0.0    4.603792e+07             0.0   \n",
       "5520975             71746969      0.0    2.415192e+08             0.0   \n",
       "73356256            71745957      0.0    9.981265e+07             0.0   \n",
       "80001238            71746897      0.0    4.474289e+06             0.0   \n",
       "848-390951-209      71748093      0.0    1.011629e+08             0.0   \n",
       "86601638            71742170      0.0    5.408869e+08             0.0   \n",
       "995529296HQ         61823005      0.0    0.000000e+00             0.0   \n",
       "AUD2D               71745195      0.0    3.423528e+06             0.0   \n",
       "EUR2D               71749891      0.0    8.130868e+05             0.0   \n",
       "GBP2D               71748248      0.0    2.842173e+07             0.0   \n",
       "SDR2D               71750537      0.0    1.497300e+04             0.0   \n",
       "TANZANIA            71746352      0.0    1.233180e+10             0.0   \n",
       "TANZANIA-SDR        71750118      0.0    1.366148e+10             0.0   \n",
       "TZ114101            71748105      0.0    5.040102e+08             0.0   \n",
       "USD2D               71748379      0.0    8.137320e+06             0.0   \n",
       "\n",
       "                  STATEMENTBALANCE  AVAILABLEBALANCE  NBOFTXS  CAT1  CAT2  \\\n",
       "ACCOUTNO                                                                    \n",
       "0011666700039         1.196103e+11      1.196103e+11        2   0.0   0.0   \n",
       "0011865383            3.612814e+09      3.612814e+09      276   0.0   0.0   \n",
       "0051688               9.649693e+08      9.649693e+08       52   0.0   0.0   \n",
       "01287560123789        2.261526e+10      2.261526e+10      149   0.0   0.0   \n",
       "021085897TANZA        2.309825e+10      2.309825e+10      798   0.0   0.0   \n",
       "021087060TANZA2       1.800000e+06      1.800000e+06        1   0.0   0.0   \n",
       "0250210381900         6.764412e+06      6.764412e+06        0   0.0   0.0   \n",
       "027631ZAR671201       1.072779e+09      1.072779e+09       49   0.0   0.0   \n",
       "03-010-0003           2.149455e+08      2.149455e+08        0   0.0   0.0   \n",
       "0908004/TANZANIA      2.088071e+09      2.088071e+09       15   0.0   0.0   \n",
       "09200281763-9         3.697839e+07      3.697839e+07       13   0.0   0.0   \n",
       "1000025007            3.123645e+09      3.123645e+09        1   0.0   0.0   \n",
       "1000172568            2.422656e+10      2.422656e+10     1037   0.0   0.0   \n",
       "1000225653            0.000000e+00      0.000000e+00        0   0.0   0.0   \n",
       "100957550700          4.008167e+08      4.008167e+08        2   0.0   0.0   \n",
       "100957550707          5.614889e+08      5.614889e+08       48   0.0   0.0   \n",
       "1077008               2.605766e+08      2.605766e+08       59   0.0   0.0   \n",
       "11426370              1.617647e+08      1.617647e+08        6   0.0   0.0   \n",
       "332600051             3.550000e+02      3.550000e+02        2   0.0   0.0   \n",
       "332604041             0.000000e+00      0.000000e+00        0   0.0   0.0   \n",
       "36113007              1.000870e+10      1.000870e+10     1410   0.0   0.0   \n",
       "36125358              0.000000e+00      0.000000e+00        0   0.0   0.0   \n",
       "3922761811            5.243187e+10      5.243187e+10      124   0.0   0.0   \n",
       "400886800200EUR       6.962383e+06      6.962383e+06        0   0.0   0.0   \n",
       "42940001              1.702526e+08      1.702526e+08       20   0.0   0.0   \n",
       "42945003              7.000000e-01      7.000000e-01        0   0.0   0.0   \n",
       "44709459354           2.715695e+09      2.715695e+09        2   0.0   0.0   \n",
       "5040040720            4.537457e+07      4.537457e+07        9   0.0   0.0   \n",
       "5516080               4.603781e+07      4.603781e+07        3   0.0   0.0   \n",
       "5520975               2.399370e+08      2.399370e+08       10   0.0   0.0   \n",
       "73356256              7.222441e+07      7.222441e+07        9   0.0   0.0   \n",
       "80001238              4.474289e+06      4.474289e+06        0   0.0   0.0   \n",
       "848-390951-209        1.011629e+08      1.011629e+08        0   0.0   0.0   \n",
       "86601638              5.433091e+08      5.433091e+08      304   0.0   0.0   \n",
       "995529296HQ           0.000000e+00      0.000000e+00        0   0.0   0.0   \n",
       "AUD2D                 3.423528e+06      3.423528e+06       10   0.0   0.0   \n",
       "EUR2D                 8.130325e+05      8.130325e+05        4   0.0   0.0   \n",
       "GBP2D                 2.836913e+07      2.836913e+07        5   0.0   0.0   \n",
       "SDR2D                 1.497300e+04      1.497300e+04        0   0.0   0.0   \n",
       "TANZANIA              1.233180e+10      1.233180e+10        0   0.0   0.0   \n",
       "TANZANIA-SDR          1.366145e+10      1.366145e+10       13   0.0   0.0   \n",
       "TZ114101              5.037020e+08      5.037020e+08        6   0.0   0.0   \n",
       "USD2D                 8.137331e+06      8.137331e+06        3   0.0   0.0   \n",
       "\n",
       "                  TRANSACTIONCODE  \n",
       "ACCOUTNO                           \n",
       "0011666700039                 0.0  \n",
       "0011865383                    0.0  \n",
       "0051688                       0.0  \n",
       "01287560123789                0.0  \n",
       "021085897TANZA                0.0  \n",
       "021087060TANZA2               0.0  \n",
       "0250210381900                 0.0  \n",
       "027631ZAR671201               0.0  \n",
       "03-010-0003                   0.0  \n",
       "0908004/TANZANIA              0.0  \n",
       "09200281763-9                 0.0  \n",
       "1000025007                    0.0  \n",
       "1000172568                    0.0  \n",
       "1000225653                    0.0  \n",
       "100957550700                  0.0  \n",
       "100957550707                  0.0  \n",
       "1077008                       0.0  \n",
       "11426370                      0.0  \n",
       "332600051                     0.0  \n",
       "332604041                     0.0  \n",
       "36113007                      0.0  \n",
       "36125358                      0.0  \n",
       "3922761811                    0.0  \n",
       "400886800200EUR               0.0  \n",
       "42940001                      0.0  \n",
       "42945003                      0.0  \n",
       "44709459354                   0.0  \n",
       "5040040720                    0.0  \n",
       "5516080                       0.0  \n",
       "5520975                       0.0  \n",
       "73356256                      0.0  \n",
       "80001238                      0.0  \n",
       "848-390951-209                0.0  \n",
       "86601638                      0.0  \n",
       "995529296HQ                   0.0  \n",
       "AUD2D                         0.0  \n",
       "EUR2D                         0.0  \n",
       "GBP2D                         0.0  \n",
       "SDR2D                         0.0  \n",
       "TANZANIA                      0.0  \n",
       "TANZANIA-SDR                  0.0  \n",
       "TZ114101                      0.0  \n",
       "USD2D                         0.0  "
      ]
     },
     "execution_count": 192,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#groupby\n",
    "df.groupby(by=[\"ACCOUTNO\"], dropna=False).sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9c4ba2ff",
   "metadata": {},
   "outputs": [],
   "source": [
    "#intro to grouping\n",
    "#df1\n",
    "pd.crosstab(df.CLOSINGBALANCEDRCR, df.ACCOUTNO)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 193,
   "id": "22fa2412",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ACCOUTHOLDERNAME</th>\n",
       "      <th>ACCOUTNO</th>\n",
       "      <th>CURRENCY</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>NOSTRO</td>\n",
       "      <td>995529296HQ</td>\n",
       "      <td>EUR</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>PARIS CLUB-BKENGB2L</td>\n",
       "      <td>42945003</td>\n",
       "      <td>GBP</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>SPECIAL GOVERN. PROJ.-CITIUS33</td>\n",
       "      <td>36125358</td>\n",
       "      <td>USD</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>CENTRAL BANK OF KENYA</td>\n",
       "      <td>1000172568</td>\n",
       "      <td>KES</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>EUR 2 DAYS NOTICE BISBCHBB</td>\n",
       "      <td>EUR2D</td>\n",
       "      <td>EUR</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 ACCOUTHOLDERNAME     ACCOUTNO CURRENCY\n",
       "0                          NOSTRO  995529296HQ      EUR\n",
       "1             PARIS CLUB-BKENGB2L     42945003      GBP\n",
       "2  SPECIAL GOVERN. PROJ.-CITIUS33     36125358      USD\n",
       "3           CENTRAL BANK OF KENYA   1000172568      KES\n",
       "4      EUR 2 DAYS NOTICE BISBCHBB        EUR2D      EUR"
      ]
     },
     "execution_count": 193,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#crosstabs\n",
    "df2.head()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "75ce095e",
   "metadata": {},
   "outputs": [],
   "source": [
    "pd.crosstab(df2.Album, df2.Genre)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 200,
   "id": "2a57210c",
   "metadata": {},
   "outputs": [],
   "source": [
    "df\n",
    "#summarize acc and CURRENCY\n",
    "#pd.crosstab(df.ACCOUTNO, df.CURRENCY)\n",
    "pd.crosstab(df.ACCOUTNO, df.CURRENCY, margins=True, margins_name=\"Total\")\n",
    "\n",
    "df4 = pd.crosstab(df.ACCOUTNO, df.CURRENCY, margins=True, margins_name=\"Total\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4d19afac",
   "metadata": {},
   "outputs": [],
   "source": [
    "pd.crosstab(df.ACCOUTNO, [df.CURRENCY, df.CLOSINGBALANCEDRCR], aggfunc=np.sum())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ac402438",
   "metadata": {},
   "source": [
    "### (2) Introduction to Numpy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "733db9e9",
   "metadata": {},
   "outputs": [],
   "source": [
    "\"\"\"\n",
    "Numpy = Numerical python - contains arrays and matrix data\n",
    "numpy -  statistial and trigonometric and other numerical computation functions\n",
    "has efficient random module\n",
    "very fast as it is written in C and there is a wrapper(interaction using python)\n",
    "\n",
    "Used for homogenuous numeric data\n",
    "Has advantage of speed and efficient memory utilization compare to regular python\n",
    "Is a basis for Pandas\n",
    "Objectives\n",
    "3.1 Creation\n",
    "3.2 Indexing and Slicing\n",
    "3.3 Basic Operations\n",
    "3.4 Universal Functions\n",
    "\n",
    "References:\n",
    "https://numpy.org/doc/stable/reference/\n",
    "\"\"\""
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9efdfe80",
   "metadata": {},
   "source": [
    "### (2.1) Creation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "22ac0b35",
   "metadata": {},
   "outputs": [],
   "source": [
    "#casting list to numpy array\n",
    "import numpy as np\n",
    "ListA = [11,33,53,56,43]\n",
    "ArrayA = np.array(ListA)\n",
    "\n",
    "\n",
    "\"\"\"\n",
    "attributes of the array\n",
    "ndim - number of dimensions\n",
    "shape - shape of ndarray\n",
    "size  - size of ndarray\n",
    "dtype - data type\n",
    "3:13:46\n",
    "\n",
    "\"\"\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "01027619",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "list"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#create a simple list that will be used to create a one dimension numpy array\n",
    "list = [34,56,75,75]\n",
    "type(list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "80e202ff",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "list"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#created a nested list that will be used to create a multi-dimension numpy array\n",
    "list2 = [[34,56,75,75],\n",
    "          [35,64,56,75],\n",
    "          [53,64,75,65]]\n",
    "type(list2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 237,
   "id": "10d0e9f1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "56"
      ]
     },
     "execution_count": 237,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#accessing list elements usind indices, will be similar to how we will access numpy array\n",
    "list2 = [[[34,56],56,75,75],[35,64,56,75],[53,64,76,65],67]\n",
    "list2[0][0]\n",
    "\n",
    "list3 = [34,56,75,75]\n",
    "list2[0][0][1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 231,
   "id": "857538d5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "67"
      ]
     },
     "execution_count": 231,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list2[2][2]\n",
    "\n",
    "list2[3]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "0e6339ad",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "numpy.ndarray"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#create numpy array from list\n",
    "import numpy as np\n",
    "arr1 = np.array(list)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "c834c605",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "numpy.ndarray"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#check type if you have obtained a numpy array\n",
    "type(arr1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "7ae2a261",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "numpy.ndarray"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list3 = [[35,64,56,75],[53,64,76,65]]\n",
    "arr2 = np.array(list3, dtype='int64')\n",
    "type(arr2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "be3b5efe",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#check dimension of numpy array\n",
    "arr1.ndim\n",
    "#arr1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "198c63dd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "arr2.ndim\n",
    "#arr2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "1d2f9f2c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(2, 4)"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#check shape of your array\n",
    "arr2.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "771eeabd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[35, 64, 56, 75],\n",
       "       [53, 64, 76, 65]], dtype=int64)"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#display your multidimensional array\n",
    "arr2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "0b951247",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[35, 64],\n",
       "       [56, 75],\n",
       "       [53, 64],\n",
       "       [76, 65]], dtype=int64)"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#reshape your multidimensional array\n",
    "arr2_1 = arr2.reshape(4,2)\n",
    "arr2_1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "8de0c027",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#check dimension of resulted array\n",
    "arr2_1.ndim"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "5e053ffa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(4,)"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#check shape of array \n",
    "arr1.shape\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "8711eb6c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dtype('int32')"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#check data type of array\n",
    "arr1.dtype"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1a8b5adf",
   "metadata": {},
   "outputs": [],
   "source": [
    "\"\"\"\n",
    "ndim - number of dimensions\n",
    "shape - shape of ndarray\n",
    "size  - size of ndarray\n",
    "dtype - data type\n",
    "\n",
    "\"\"\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "bd7d7263",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "8"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#number of elements\n",
    "arr2_1.size   #5     \n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "2ff1795c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([35, 64], dtype=int64)"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#we can access data as in list using numpy array name, square brackets and index\n",
    "#a[0] is equal to listX[0]\n",
    "arr2_1[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "785261f8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([23, 23], dtype=int64)"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#update elements, similar to lists\n",
    "arr2_1[0] = 23\n",
    "arr2_1[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "f4900847",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[53, 64],\n",
       "       [76, 65]], dtype=int64)"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#slice numpy array like lists and tuples, last index not included\n",
    "b = arr2_1[2:4]\n",
    "b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "1c0a2a44",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[43, 56],\n",
       "       [43, 56],\n",
       "       [53, 64],\n",
       "       [76, 65]], dtype=int64)"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#assign values\n",
    "arr2_1[0:2]=43,56\n",
    "arr2_1\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "2f045912",
   "metadata": {},
   "outputs": [],
   "source": [
    "a = arr2_1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "6d821ad1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 5, 11])"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#basic operations -considered as eucledian vectors \n",
    "#addition and subtraction - similar to vector addition and subtractin\n",
    "a = np.array([2,5])\n",
    "b = np.array([3,6])\n",
    "c = a + b\n",
    "c\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 256,
   "id": "780f4a27",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "716 ns ± 30.3 ns per loop (mean ± std. dev. of 7 runs, 1000000 loops each)\n"
     ]
    }
   ],
   "source": [
    "#compare efficiency of numpy array addition vs normal array addition\n",
    "%%timeit\n",
    "#numpy addition is fast and efficient that array addition\n",
    "u = [1,0]\n",
    "v = [1,0]\n",
    "\n",
    "z = []\n",
    "\n",
    "\n",
    "for n,m in zip(u,v):\n",
    "    z.append(n+m)\n",
    "z"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "c8ecf1fe",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4.49 µs ± 81.1 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each)\n"
     ]
    }
   ],
   "source": [
    "%%timeit\n",
    "#numpy addition is fast and efficient that array addition\n",
    "u = np.array([1,0])\n",
    "v = np.array([1,0])\n",
    "z = u + v\n",
    "z"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "69427fcb",
   "metadata": {},
   "outputs": [],
   "source": [
    "#compare efficiency of numpy array arithmetic sum from 0 to 1m vs normal list/array arithmetic sum\n",
    "#sum of list elements\n",
    "arr1_np=np.arange(0,1000000)\n",
    "arr1   =range(0,1000000)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "deed25b4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "82.3 ms ± 594 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)\n"
     ]
    }
   ],
   "source": [
    "%%timeit\n",
    "sum(arr1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "84273663",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "980 µs ± 7.89 µs per loop (mean ± std. dev. of 7 runs, 1000 loops each)\n"
     ]
    }
   ],
   "source": [
    "%%timeit\n",
    "np.sum(arr1_np)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e7e16f16",
   "metadata": {},
   "outputs": [],
   "source": [
    "#numpy operations are more efficient than normal array/list operations\n",
    "#make use of numpy in numerical data processing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "beecc116",
   "metadata": {},
   "outputs": [],
   "source": [
    "d = a - b\n",
    "d\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "83b1749f",
   "metadata": {},
   "outputs": [],
   "source": [
    "#numpy addition is fast and efficient that array addition\n",
    "u = [2,0]\n",
    "v = [1,0]\n",
    "\n",
    "z = []\n",
    "\n",
    "for n,m in zip(u,v):\n",
    "    z.append(n-m)\n",
    "z"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cb4f1679",
   "metadata": {},
   "outputs": [],
   "source": [
    "#multiplication of numpy array by scalar\n",
    "e = a * 2\n",
    "e"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0d95e978",
   "metadata": {},
   "outputs": [],
   "source": [
    "#np dot product\n",
    "u = np.array([1,2])\n",
    "v = np.array([3,2])\n",
    "result = np.dot(u,v)\n",
    "result\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ee793cc9",
   "metadata": {},
   "outputs": [],
   "source": [
    "#adding constant to an numpy array\n",
    "u=np.array([1,2,3,-1])\n",
    "z=u+1\n",
    "z\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f0f1d42b",
   "metadata": {},
   "outputs": [],
   "source": [
    "#universal functions\n",
    "a=np.array([1,-1,1,-1])\n",
    "mean_a=a.mean()\n",
    "mean_a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a5d67924",
   "metadata": {},
   "outputs": [],
   "source": [
    "#universal functions\n",
    "b=np.array([1, -2, 3, 4, 5])\n",
    "max_b=b.max()\n",
    "max_b\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8ffe1cd0",
   "metadata": {},
   "outputs": [],
   "source": [
    "b.dtype"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "8810fa34",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "\"\\n%matplotlib inline sets the backend of matplotlib to the 'inline' backend: With this backend, the output of plotting commands is displayed inline within frontends like the Jupyter notebook, directly below the code cell that produced it. The resulting plots will then also be stored in the notebook document.\\n\""
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#ploting mathematical functions\n",
    "x = np.linspace(0,2*np.pi,100)\n",
    "y = np.sin(x)\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "plt.plot(x,y)\n",
    "\"\"\"\n",
    "%matplotlib inline sets the backend of matplotlib to the 'inline' backend: With this backend, the output of plotting commands is displayed inline within frontends like the Jupyter notebook, directly below the code cell that produced it. The resulting plots will then also be stored in the notebook document.\n",
    "\"\"\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "9d1b81af",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "numpy.ndarray"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#create int64 array\n",
    "one_d= np.array([10,20,34,23], dtype='int64')\n",
    "one_d\n",
    "type(one_d)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5265ca40",
   "metadata": {},
   "outputs": [],
   "source": [
    "#array slicing\n",
    "one_d[0:2]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2a593077",
   "metadata": {},
   "outputs": [],
   "source": [
    "#two dimensions array\n",
    "two_d=np.array([[1,2,3,4],\n",
    "               [5,6,7,8]])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c4e526e9",
   "metadata": {},
   "outputs": [],
   "source": [
    "two_d"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bc572398",
   "metadata": {},
   "outputs": [],
   "source": [
    "two_d.ndim\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1ea9ed3a",
   "metadata": {},
   "outputs": [],
   "source": [
    "#access element\n",
    "two_d[1,1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "16be5178",
   "metadata": {},
   "outputs": [],
   "source": [
    "two_d[1][1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f2977f4a",
   "metadata": {},
   "outputs": [],
   "source": [
    "#primary axis - will be from top to botton, axix=0\n",
    "#secondary axis - from left to right, axis = 1\n",
    "arr1 = np.arange(0,12)\n",
    "arr1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9bb9e2a0",
   "metadata": {},
   "outputs": [],
   "source": [
    "arr1.ndim"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3cca8d13",
   "metadata": {},
   "outputs": [],
   "source": [
    "arr1.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b612bd27",
   "metadata": {},
   "outputs": [],
   "source": [
    "arr2 = arr1.reshape(3,4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2b5ddf05",
   "metadata": {},
   "outputs": [],
   "source": [
    "arr2.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1fa821c4",
   "metadata": {},
   "outputs": [],
   "source": [
    "arr2.ndim"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "09891245",
   "metadata": {},
   "outputs": [],
   "source": [
    "arr2[1,1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a9a22abe",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
