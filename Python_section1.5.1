{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "5513a62b",
   "metadata": {},
   "source": [
    "#### PYTHON FOR DATA ANALYTICS\n",
    "#### DAY 5 on  30 DEC 2021"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0f823b95",
   "metadata": {},
   "outputs": [],
   "source": [
    "\"\"\"\"\n",
    "Agenda\n",
    "(1)Recap on Pandas and Numpy\n",
    "(2)Data analysis with Pandas\n",
    "\n",
    "\"\"\""
   ]
  },
  {
   "cell_type": "markdown",
   "id": "818fd96f",
   "metadata": {},
   "source": [
    "### (1) Recap introduction to Pandas\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "de4d9099",
   "metadata": {},
   "source": [
    "#### (2) Data Analysis with Pandas"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 182,
   "id": "0d3fd5f3",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 183,
   "id": "276cfa9a",
   "metadata": {},
   "outputs": [],
   "source": [
    "columns_list = ['Institutions','Loan_classification','Customer_age','Loan_amount','Region']\n",
    "data = {\"Bank\": [\"CRDB\", \"CRDB\", \"CRDB\", \"CRDB\", \"CRDB\", \"CRDB\", \"NMB\", \"NMB\", \"NMB\", \"NMB\", \"NMB\", \"NMB\"],\n",
    "\"Classification\": [\"Current\", \"Current\", \"Substandard\", \"Substandard\", \"Substandard\", \"Loss\", \"ESM\", \"Loss\", \"Doubtful\", \"ESM\", \"ESM\", \"Current\"],\n",
    "\"Age\": [24, 28, 40, 22, 29, 33, 31, 26, 21, 36, 25, 31],\n",
    "\"Amount\": [3424, 54328, 4034, 34522, 3529, 3433, 34531, 23556, 2441, 3356, 325, 4531],\n",
    "\"Location\":['Dar','Aru','Mza','Mby','Dar','Aru','Tan','Mza','Mby','Mby','Mby','Dar'] }\n",
    "#df = pd.DataFrame(data, columns=['Institutions', 'Loan_classification', 'Customer_age', 'Loan_amount', 'Region'])\n",
    "df = pd.DataFrame(data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 185,
   "id": "deb08e0b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Bank</th>\n",
       "      <th>Classification</th>\n",
       "      <th>Age</th>\n",
       "      <th>Amount</th>\n",
       "      <th>Location</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>CRDB</td>\n",
       "      <td>Current</td>\n",
       "      <td>24</td>\n",
       "      <td>3424</td>\n",
       "      <td>Dar</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>CRDB</td>\n",
       "      <td>Current</td>\n",
       "      <td>28</td>\n",
       "      <td>54328</td>\n",
       "      <td>Aru</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>CRDB</td>\n",
       "      <td>Substandard</td>\n",
       "      <td>40</td>\n",
       "      <td>4034</td>\n",
       "      <td>Mza</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>CRDB</td>\n",
       "      <td>Substandard</td>\n",
       "      <td>22</td>\n",
       "      <td>34522</td>\n",
       "      <td>Mby</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>CRDB</td>\n",
       "      <td>Substandard</td>\n",
       "      <td>29</td>\n",
       "      <td>3529</td>\n",
       "      <td>Dar</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Bank Classification  Age  Amount Location\n",
       "0  CRDB        Current   24    3424      Dar\n",
       "1  CRDB        Current   28   54328      Aru\n",
       "2  CRDB    Substandard   40    4034      Mza\n",
       "3  CRDB    Substandard   22   34522      Mby\n",
       "4  CRDB    Substandard   29    3529      Dar"
      ]
     },
     "execution_count": 185,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Display dataframe\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fd95a856",
   "metadata": {},
   "outputs": [],
   "source": [
    "#View information about columns\n",
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 187,
   "id": "328db3ab",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Classification'>"
      ]
     },
     "execution_count": 187,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#df.groupby(['Location']).mean()\n",
    "#df.groupby(['Bank']).mean()\n",
    "df3 = df.groupby(['Classification']).mean()\n",
    "df3.plot()\n",
    "#df3.plot(x = df3['Age'], y =  df3['Amount'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 188,
   "id": "6c280245",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Amount</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Bank</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>CRDB</th>\n",
       "      <td>29.333333</td>\n",
       "      <td>17211.666667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NMB</th>\n",
       "      <td>28.333333</td>\n",
       "      <td>11456.666667</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            Age        Amount\n",
       "Bank                         \n",
       "CRDB  29.333333  17211.666667\n",
       "NMB   28.333333  11456.666667"
      ]
     },
     "execution_count": 188,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Group by one of columns\n",
    "df.groupby(['Bank']).mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "895062e5",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.groupby(level=0).mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 189,
   "id": "089385b4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Amount</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Classification</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Current</th>\n",
       "      <td>83</td>\n",
       "      <td>62283</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Doubtful</th>\n",
       "      <td>21</td>\n",
       "      <td>2441</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ESM</th>\n",
       "      <td>92</td>\n",
       "      <td>38212</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Loss</th>\n",
       "      <td>59</td>\n",
       "      <td>26989</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Substandard</th>\n",
       "      <td>91</td>\n",
       "      <td>42085</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                Age  Amount\n",
       "Classification             \n",
       "Current          83   62283\n",
       "Doubtful         21    2441\n",
       "ESM              92   38212\n",
       "Loss             59   26989\n",
       "Substandard      91   42085"
      ]
     },
     "execution_count": 189,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Group by, including null values\n",
    "df.groupby(by=[\"Classification\"], dropna=False).sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 190,
   "id": "7f88fbbe",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Amount</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Bank</th>\n",
       "      <th>Classification</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">CRDB</th>\n",
       "      <th>Current</th>\n",
       "      <td>52</td>\n",
       "      <td>57752</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Loss</th>\n",
       "      <td>33</td>\n",
       "      <td>3433</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Substandard</th>\n",
       "      <td>91</td>\n",
       "      <td>42085</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"4\" valign=\"top\">NMB</th>\n",
       "      <th>Current</th>\n",
       "      <td>31</td>\n",
       "      <td>4531</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Doubtful</th>\n",
       "      <td>21</td>\n",
       "      <td>2441</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ESM</th>\n",
       "      <td>92</td>\n",
       "      <td>38212</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Loss</th>\n",
       "      <td>26</td>\n",
       "      <td>23556</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                     Age  Amount\n",
       "Bank Classification             \n",
       "CRDB Current          52   57752\n",
       "     Loss             33    3433\n",
       "     Substandard      91   42085\n",
       "NMB  Current          31    4531\n",
       "     Doubtful         21    2441\n",
       "     ESM              92   38212\n",
       "     Loss             26   23556"
      ]
     },
     "execution_count": 190,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby(by=[\"Bank\", \"Classification\"]).sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 191,
   "id": "b0cfac25",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Amount</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Bank</th>\n",
       "      <th>Classification</th>\n",
       "      <th>Location</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"6\" valign=\"top\">CRDB</th>\n",
       "      <th rowspan=\"2\" valign=\"top\">Current</th>\n",
       "      <th>Aru</th>\n",
       "      <td>28</td>\n",
       "      <td>54328</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Dar</th>\n",
       "      <td>24</td>\n",
       "      <td>3424</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Loss</th>\n",
       "      <th>Aru</th>\n",
       "      <td>33</td>\n",
       "      <td>3433</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">Substandard</th>\n",
       "      <th>Dar</th>\n",
       "      <td>29</td>\n",
       "      <td>3529</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mby</th>\n",
       "      <td>22</td>\n",
       "      <td>34522</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mza</th>\n",
       "      <td>40</td>\n",
       "      <td>4034</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"5\" valign=\"top\">NMB</th>\n",
       "      <th>Current</th>\n",
       "      <th>Dar</th>\n",
       "      <td>31</td>\n",
       "      <td>4531</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Doubtful</th>\n",
       "      <th>Mby</th>\n",
       "      <td>21</td>\n",
       "      <td>2441</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">ESM</th>\n",
       "      <th>Mby</th>\n",
       "      <td>61</td>\n",
       "      <td>3681</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Tan</th>\n",
       "      <td>31</td>\n",
       "      <td>34531</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Loss</th>\n",
       "      <th>Mza</th>\n",
       "      <td>26</td>\n",
       "      <td>23556</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                              Age  Amount\n",
       "Bank Classification Location             \n",
       "CRDB Current        Aru        28   54328\n",
       "                    Dar        24    3424\n",
       "     Loss           Aru        33    3433\n",
       "     Substandard    Dar        29    3529\n",
       "                    Mby        22   34522\n",
       "                    Mza        40    4034\n",
       "NMB  Current        Dar        31    4531\n",
       "     Doubtful       Mby        21    2441\n",
       "     ESM            Mby        61    3681\n",
       "                    Tan        31   34531\n",
       "     Loss           Mza        26   23556"
      ]
     },
     "execution_count": 191,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#group by Bank, Classification, and Location\n",
    "df.groupby(by=[\"Bank\", \"Classification\", \"Location\"]).sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 192,
   "id": "d5793ea2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>Bank</th>\n",
       "      <th>Amount</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Classification</th>\n",
       "      <th>Location</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">Current</th>\n",
       "      <th>Aru</th>\n",
       "      <td>CRDB</td>\n",
       "      <td>54328</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Dar</th>\n",
       "      <td>NMB</td>\n",
       "      <td>4531</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Doubtful</th>\n",
       "      <th>Mby</th>\n",
       "      <td>NMB</td>\n",
       "      <td>2441</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">ESM</th>\n",
       "      <th>Mby</th>\n",
       "      <td>NMB</td>\n",
       "      <td>3356</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Tan</th>\n",
       "      <td>NMB</td>\n",
       "      <td>34531</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">Loss</th>\n",
       "      <th>Aru</th>\n",
       "      <td>CRDB</td>\n",
       "      <td>3433</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mza</th>\n",
       "      <td>NMB</td>\n",
       "      <td>23556</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">Substandard</th>\n",
       "      <th>Dar</th>\n",
       "      <td>CRDB</td>\n",
       "      <td>3529</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mby</th>\n",
       "      <td>CRDB</td>\n",
       "      <td>34522</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mza</th>\n",
       "      <td>CRDB</td>\n",
       "      <td>4034</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                         Bank  Amount\n",
       "Classification Location              \n",
       "Current        Aru       CRDB   54328\n",
       "               Dar        NMB    4531\n",
       "Doubtful       Mby        NMB    2441\n",
       "ESM            Mby        NMB    3356\n",
       "               Tan        NMB   34531\n",
       "Loss           Aru       CRDB    3433\n",
       "               Mza        NMB   23556\n",
       "Substandard    Dar       CRDB    3529\n",
       "               Mby       CRDB   34522\n",
       "               Mza       CRDB    4034"
      ]
     },
     "execution_count": 192,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Group by classification and location, showing columns of bank and maximum amount\n",
    "df5 = df[['Bank','Classification','Amount','Location']]\n",
    "df5.groupby(by=[\"Classification\",\"Location\"]).max()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 193,
   "id": "d1e38134",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th colspan=\"4\" halign=\"left\">Amount</th>\n",
       "      <th colspan=\"3\" halign=\"left\">Age</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>min</th>\n",
       "      <th>mean</th>\n",
       "      <th>max</th>\n",
       "      <th>sum</th>\n",
       "      <th>min</th>\n",
       "      <th>mean</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Bank</th>\n",
       "      <th>Location</th>\n",
       "      <th>Classification</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"6\" valign=\"top\">CRDB</th>\n",
       "      <th rowspan=\"2\" valign=\"top\">Aru</th>\n",
       "      <th>Current</th>\n",
       "      <td>54328</td>\n",
       "      <td>54328.0</td>\n",
       "      <td>54328</td>\n",
       "      <td>54328</td>\n",
       "      <td>28</td>\n",
       "      <td>28.0</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Loss</th>\n",
       "      <td>3433</td>\n",
       "      <td>3433.0</td>\n",
       "      <td>3433</td>\n",
       "      <td>3433</td>\n",
       "      <td>33</td>\n",
       "      <td>33.0</td>\n",
       "      <td>33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">Dar</th>\n",
       "      <th>Current</th>\n",
       "      <td>3424</td>\n",
       "      <td>3424.0</td>\n",
       "      <td>3424</td>\n",
       "      <td>3424</td>\n",
       "      <td>24</td>\n",
       "      <td>24.0</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Substandard</th>\n",
       "      <td>3529</td>\n",
       "      <td>3529.0</td>\n",
       "      <td>3529</td>\n",
       "      <td>3529</td>\n",
       "      <td>29</td>\n",
       "      <td>29.0</td>\n",
       "      <td>29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mby</th>\n",
       "      <th>Substandard</th>\n",
       "      <td>34522</td>\n",
       "      <td>34522.0</td>\n",
       "      <td>34522</td>\n",
       "      <td>34522</td>\n",
       "      <td>22</td>\n",
       "      <td>22.0</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mza</th>\n",
       "      <th>Substandard</th>\n",
       "      <td>4034</td>\n",
       "      <td>4034.0</td>\n",
       "      <td>4034</td>\n",
       "      <td>4034</td>\n",
       "      <td>40</td>\n",
       "      <td>40.0</td>\n",
       "      <td>40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"5\" valign=\"top\">NMB</th>\n",
       "      <th>Dar</th>\n",
       "      <th>Current</th>\n",
       "      <td>4531</td>\n",
       "      <td>4531.0</td>\n",
       "      <td>4531</td>\n",
       "      <td>4531</td>\n",
       "      <td>31</td>\n",
       "      <td>31.0</td>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">Mby</th>\n",
       "      <th>Doubtful</th>\n",
       "      <td>2441</td>\n",
       "      <td>2441.0</td>\n",
       "      <td>2441</td>\n",
       "      <td>2441</td>\n",
       "      <td>21</td>\n",
       "      <td>21.0</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ESM</th>\n",
       "      <td>325</td>\n",
       "      <td>1840.5</td>\n",
       "      <td>3356</td>\n",
       "      <td>3681</td>\n",
       "      <td>25</td>\n",
       "      <td>30.5</td>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mza</th>\n",
       "      <th>Loss</th>\n",
       "      <td>23556</td>\n",
       "      <td>23556.0</td>\n",
       "      <td>23556</td>\n",
       "      <td>23556</td>\n",
       "      <td>26</td>\n",
       "      <td>26.0</td>\n",
       "      <td>26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Tan</th>\n",
       "      <th>ESM</th>\n",
       "      <td>34531</td>\n",
       "      <td>34531.0</td>\n",
       "      <td>34531</td>\n",
       "      <td>34531</td>\n",
       "      <td>31</td>\n",
       "      <td>31.0</td>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                             Amount                        Age          \n",
       "                                min     mean    max    sum min  mean max\n",
       "Bank Location Classification                                            \n",
       "CRDB Aru      Current         54328  54328.0  54328  54328  28  28.0  28\n",
       "              Loss             3433   3433.0   3433   3433  33  33.0  33\n",
       "     Dar      Current          3424   3424.0   3424   3424  24  24.0  24\n",
       "              Substandard      3529   3529.0   3529   3529  29  29.0  29\n",
       "     Mby      Substandard     34522  34522.0  34522  34522  22  22.0  22\n",
       "     Mza      Substandard      4034   4034.0   4034   4034  40  40.0  40\n",
       "NMB  Dar      Current          4531   4531.0   4531   4531  31  31.0  31\n",
       "     Mby      Doubtful         2441   2441.0   2441   2441  21  21.0  21\n",
       "              ESM               325   1840.5   3356   3681  25  30.5  36\n",
       "     Mza      Loss            23556  23556.0  23556  23556  26  26.0  26\n",
       "     Tan      ESM             34531  34531.0  34531  34531  31  31.0  31"
      ]
     },
     "execution_count": 193,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#using aggregate function to aggregate min, mean, max, and sum in grouping\n",
    "df.groupby(['Bank','Location','Classification']).agg({'Amount':['min','mean','max','sum'], 'Age':['min','mean','max']})\n",
    "#'Classification',"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 180,
   "id": "83bd2336",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Bank</th>\n",
       "      <th>Classification</th>\n",
       "      <th>Age</th>\n",
       "      <th>Amount</th>\n",
       "      <th>Location</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>CRDB</td>\n",
       "      <td>Current</td>\n",
       "      <td>24</td>\n",
       "      <td>3424</td>\n",
       "      <td>Dar</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>CRDB</td>\n",
       "      <td>Current</td>\n",
       "      <td>28</td>\n",
       "      <td>54328</td>\n",
       "      <td>Aru</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>CRDB</td>\n",
       "      <td>Substandard</td>\n",
       "      <td>40</td>\n",
       "      <td>4034</td>\n",
       "      <td>Mza</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>CRDB</td>\n",
       "      <td>Substandard</td>\n",
       "      <td>22</td>\n",
       "      <td>34522</td>\n",
       "      <td>Mby</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>CRDB</td>\n",
       "      <td>Substandard</td>\n",
       "      <td>29</td>\n",
       "      <td>3529</td>\n",
       "      <td>Dar</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>CRDB</td>\n",
       "      <td>Loss</td>\n",
       "      <td>33</td>\n",
       "      <td>3433</td>\n",
       "      <td>Aru</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>NMB</td>\n",
       "      <td>ESM</td>\n",
       "      <td>31</td>\n",
       "      <td>34531</td>\n",
       "      <td>Tan</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>NMB</td>\n",
       "      <td>Loss</td>\n",
       "      <td>26</td>\n",
       "      <td>23556</td>\n",
       "      <td>Mza</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>NMB</td>\n",
       "      <td>Doubtful</td>\n",
       "      <td>21</td>\n",
       "      <td>2441</td>\n",
       "      <td>Mby</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>NMB</td>\n",
       "      <td>ESM</td>\n",
       "      <td>36</td>\n",
       "      <td>3356</td>\n",
       "      <td>Mby</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>NMB</td>\n",
       "      <td>ESM</td>\n",
       "      <td>25</td>\n",
       "      <td>325</td>\n",
       "      <td>Mby</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>NMB</td>\n",
       "      <td>Current</td>\n",
       "      <td>31</td>\n",
       "      <td>4531</td>\n",
       "      <td>Dar</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Bank Classification  Age  Amount Location\n",
       "0   CRDB        Current   24    3424      Dar\n",
       "1   CRDB        Current   28   54328      Aru\n",
       "2   CRDB    Substandard   40    4034      Mza\n",
       "3   CRDB    Substandard   22   34522      Mby\n",
       "4   CRDB    Substandard   29    3529      Dar\n",
       "5   CRDB           Loss   33    3433      Aru\n",
       "6    NMB            ESM   31   34531      Tan\n",
       "7    NMB           Loss   26   23556      Mza\n",
       "8    NMB       Doubtful   21    2441      Mby\n",
       "9    NMB            ESM   36    3356      Mby\n",
       "10   NMB            ESM   25     325      Mby\n",
       "11   NMB        Current   31    4531      Dar"
      ]
     },
     "execution_count": 180,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 194,
   "id": "ee2b4fd0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>Bank</th>\n",
       "      <th>Age</th>\n",
       "      <th>Amount</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Classification</th>\n",
       "      <th>Location</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">Current</th>\n",
       "      <th>Aru</th>\n",
       "      <td>CRDB</td>\n",
       "      <td>28</td>\n",
       "      <td>54328</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Dar</th>\n",
       "      <td>NMB</td>\n",
       "      <td>31</td>\n",
       "      <td>4531</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Doubtful</th>\n",
       "      <th>Mby</th>\n",
       "      <td>NMB</td>\n",
       "      <td>21</td>\n",
       "      <td>2441</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">ESM</th>\n",
       "      <th>Mby</th>\n",
       "      <td>NMB</td>\n",
       "      <td>36</td>\n",
       "      <td>3356</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Tan</th>\n",
       "      <td>NMB</td>\n",
       "      <td>31</td>\n",
       "      <td>34531</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">Loss</th>\n",
       "      <th>Aru</th>\n",
       "      <td>CRDB</td>\n",
       "      <td>33</td>\n",
       "      <td>3433</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mza</th>\n",
       "      <td>NMB</td>\n",
       "      <td>26</td>\n",
       "      <td>23556</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">Substandard</th>\n",
       "      <th>Dar</th>\n",
       "      <td>CRDB</td>\n",
       "      <td>29</td>\n",
       "      <td>3529</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mby</th>\n",
       "      <td>CRDB</td>\n",
       "      <td>22</td>\n",
       "      <td>34522</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mza</th>\n",
       "      <td>CRDB</td>\n",
       "      <td>40</td>\n",
       "      <td>4034</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                         Bank  Age  Amount\n",
       "Classification Location                   \n",
       "Current        Aru       CRDB   28   54328\n",
       "               Dar        NMB   31    4531\n",
       "Doubtful       Mby        NMB   21    2441\n",
       "ESM            Mby        NMB   36    3356\n",
       "               Tan        NMB   31   34531\n",
       "Loss           Aru       CRDB   33    3433\n",
       "               Mza        NMB   26   23556\n",
       "Substandard    Dar       CRDB   29    3529\n",
       "               Mby       CRDB   22   34522\n",
       "               Mza       CRDB   40    4034"
      ]
     },
     "execution_count": 194,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#using max() function in grouping data\n",
    "df.groupby(by=[\"Classification\",\"Location\"]).max()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 195,
   "id": "c140b677",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Amount</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Classification</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Current</th>\n",
       "      <td>27.666667</td>\n",
       "      <td>20761.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Doubtful</th>\n",
       "      <td>21.000000</td>\n",
       "      <td>2441.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ESM</th>\n",
       "      <td>30.666667</td>\n",
       "      <td>12737.333333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Loss</th>\n",
       "      <td>29.500000</td>\n",
       "      <td>13494.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Substandard</th>\n",
       "      <td>30.333333</td>\n",
       "      <td>14028.333333</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                      Age        Amount\n",
       "Classification                         \n",
       "Current         27.666667  20761.000000\n",
       "Doubtful        21.000000   2441.000000\n",
       "ESM             30.666667  12737.333333\n",
       "Loss            29.500000  13494.500000\n",
       "Substandard     30.333333  14028.333333"
      ]
     },
     "execution_count": 195,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Grouping by a single column\n",
    "df.groupby(['Classification']).mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 196,
   "id": "8ef92293",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"3\" halign=\"left\">Age</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "      <th>mean</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Classification</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Current</th>\n",
       "      <td>24</td>\n",
       "      <td>31</td>\n",
       "      <td>27.666667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Doubtful</th>\n",
       "      <td>21</td>\n",
       "      <td>21</td>\n",
       "      <td>21.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ESM</th>\n",
       "      <td>25</td>\n",
       "      <td>36</td>\n",
       "      <td>30.666667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Loss</th>\n",
       "      <td>26</td>\n",
       "      <td>33</td>\n",
       "      <td>29.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Substandard</th>\n",
       "      <td>22</td>\n",
       "      <td>40</td>\n",
       "      <td>30.333333</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               Age               \n",
       "               min max       mean\n",
       "Classification                   \n",
       "Current         24  31  27.666667\n",
       "Doubtful        21  21  21.000000\n",
       "ESM             25  36  30.666667\n",
       "Loss            26  33  29.500000\n",
       "Substandard     22  40  30.333333"
      ]
     },
     "execution_count": 196,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#grouping by a single column and put aggregate function for summary\n",
    "grouped_single = df.groupby('Classification').agg({'Age':['min','max','mean']})\n",
    "grouped_single"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 197,
   "id": "75b8f89e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"4\" halign=\"left\">Amount</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "      <th>mean</th>\n",
       "      <th>sum</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Classification</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Current</th>\n",
       "      <td>3424</td>\n",
       "      <td>54328</td>\n",
       "      <td>20761.000000</td>\n",
       "      <td>62283</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Doubtful</th>\n",
       "      <td>2441</td>\n",
       "      <td>2441</td>\n",
       "      <td>2441.000000</td>\n",
       "      <td>2441</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ESM</th>\n",
       "      <td>325</td>\n",
       "      <td>34531</td>\n",
       "      <td>12737.333333</td>\n",
       "      <td>38212</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Loss</th>\n",
       "      <td>3433</td>\n",
       "      <td>23556</td>\n",
       "      <td>13494.500000</td>\n",
       "      <td>26989</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Substandard</th>\n",
       "      <td>3529</td>\n",
       "      <td>34522</td>\n",
       "      <td>14028.333333</td>\n",
       "      <td>42085</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               Amount                            \n",
       "                  min    max          mean    sum\n",
       "Classification                                   \n",
       "Current          3424  54328  20761.000000  62283\n",
       "Doubtful         2441   2441   2441.000000   2441\n",
       "ESM               325  34531  12737.333333  38212\n",
       "Loss             3433  23556  13494.500000  26989\n",
       "Substandard      3529  34522  14028.333333  42085"
      ]
     },
     "execution_count": 197,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grouped_single = df.groupby('Classification').agg({'Amount':['min','max','mean','sum']})\n",
    "grouped_single"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 198,
   "id": "6d471296",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "            Age\n",
      "           mean\n",
      "Bank           \n",
      "CRDB  29.333333\n",
      "NMB   28.333333\n"
     ]
    }
   ],
   "source": [
    "# group by Bank, get mean value of Age for each value of Bank.\n",
    "grouped_single = df.groupby('Bank').agg({'Age':['mean']})\n",
    "\n",
    "print(grouped_single)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 199,
   "id": "c37920c0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "     Age               \n",
      "     min       mean max\n",
      "Bank                   \n",
      "CRDB  22  29.333333  40\n",
      "NMB   21  28.333333  36\n"
     ]
    }
   ],
   "source": [
    "# group by Bank, get mean value of Age for each value of Bank.\n",
    "grouped_single = df.groupby('Bank').agg({'Age':['min','mean','max']})\n",
    "\n",
    "print(grouped_single)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 200,
   "id": "39775a59",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "            Age        \n",
      "           mean min max\n",
      "Bank                   \n",
      "CRDB  29.333333  22  40\n",
      "NMB   28.333333  21  36\n"
     ]
    }
   ],
   "source": [
    "# group by Bank, get mean, min, and max value of Age for each value of Bank.\n",
    "grouped_single = df.groupby('Bank').agg({'Age': ['mean', 'min', 'max']})\n",
    "\n",
    "print(grouped_single)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 201,
   "id": "1261af0a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "            Age        \n",
      "           mean min max\n",
      "Bank                   \n",
      "CRDB  29.333333  22  40\n",
      "NMB   28.333333  21  36\n"
     ]
    }
   ],
   "source": [
    "# group by Bank, get mean, min, and max value of Age for each value of Bank.\n",
    "grouped_single = df.groupby('Bank').agg({'Age': ['mean', 'min', 'max']})\n",
    "\n",
    "print(grouped_single)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 202,
   "id": "e367595e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                           Age        \n",
      "                          mean min max\n",
      "Bank Classification                   \n",
      "CRDB Current         26.000000  24  28\n",
      "     Loss            33.000000  33  33\n",
      "     Substandard     30.333333  22  40\n",
      "NMB  Current         31.000000  31  31\n",
      "     Doubtful        21.000000  21  21\n",
      "     ESM             30.666667  25  36\n",
      "     Loss            26.000000  26  26\n"
     ]
    }
   ],
   "source": [
    "# group by Bank, Classification, get mean, min, and max value of Age for each value of Bank.\n",
    "grouped_single = df.groupby(['Bank','Classification']).agg({'Age': ['mean', 'min', 'max']})\n",
    "\n",
    "print(grouped_single)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 203,
   "id": "e7704557",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                     Age  Amount\n",
      "Classification Bank             \n",
      "Current        CRDB   52   57752\n",
      "               NMB    31    4531\n",
      "Doubtful       NMB    21    2441\n",
      "ESM            NMB    92   38212\n",
      "Loss           CRDB   33    3433\n",
      "               NMB    26   23556\n",
      "Substandard    CRDB   91   42085\n"
     ]
    }
   ],
   "source": [
    "# group by Classificatin, Bank, Age, Sum for each value of Bank.\n",
    "grouped_single = df.groupby(['Classification','Bank']).sum()\n",
    "\n",
    "print(grouped_single)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d2a92494",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
